{"version":3,"file":"hundred.js","sources":["api/hundred.js"],"sourcesContent":["/**\r\n * 一百件事挑战 API\r\n * 对接后端接口文档：前端对接文档 - 一百事挑战API\r\n */\r\n\r\nimport http from '../utils/http.js';\r\nimport config from '../utils/config.js';\r\n\r\n/**\r\n * 获取任务列表\r\n * @returns {Promise<Object>} 返回任务列表\r\n * \r\n * 后端接口要求：\r\n * - 请求方法：GET\r\n * - 请求地址：/api/challenge/tasks\r\n * - 请求头：需携带 Authorization token\r\n * - 返回数据格式：\r\n *   {\r\n *     success: true,\r\n *     message: \"获取成功\",\r\n *     tasks: [\r\n *       {\r\n *         id: number,\r\n *         taskName: string,\r\n *         taskDescription: string,\r\n *         taskIndex: number | null,\r\n *         category: \"preset\" | \"custom\",\r\n *         iconUrl: string | null,\r\n *         status: \"pending\" | \"completed\",\r\n *         photoUrl: string | null,\r\n *         note: string | null,\r\n *         isFavorited: boolean,\r\n *         completedAt: string | null\r\n *       }\r\n *     ]\r\n *   }\r\n */\r\nexport function getTasks() {\r\n  const url = config.API.CHALLENGE.LIST;\r\n  const fullUrl = config.baseURL + url;\r\n  \r\n  console.log('🔗 [一百件事API] 开始请求任务列表');\r\n  console.log('📍 请求地址:', fullUrl);\r\n  console.log('📋 请求方法: GET');\r\n  console.log('⏰ 请求时间:', new Date().toLocaleString());\r\n  \r\n  return http.get(url).then(response => {\r\n    console.log('✅ [一百件事API] 获取任务列表成功');\r\n    console.log('📦 响应数据:', response);\r\n    \r\n    // 处理响应数据格式\r\n    if (response && response.tasks) {\r\n      console.log(`📊 任务总数: ${response.tasks.length}`);\r\n      const presetCount = response.tasks.filter(t => t.category === 'preset').length;\r\n      const customCount = response.tasks.filter(t => t.category === 'custom').length;\r\n      const completedCount = response.tasks.filter(t => t.status === 'completed').length;\r\n      console.log(`   - 预设任务: ${presetCount} 个`);\r\n      console.log(`   - 自定义任务: ${customCount} 个`);\r\n      console.log(`   - 已完成: ${completedCount} 个`);\r\n      \r\n      return response;\r\n    } else if (response && Array.isArray(response)) {\r\n      // 兼容直接返回数组的情况\r\n      console.log('📊 任务总数:', response.length);\r\n      return { success: true, tasks: response };\r\n    } else {\r\n      console.warn('⚠️ 响应数据格式异常:', response);\r\n      return { success: true, tasks: [] };\r\n    }\r\n  }).catch(error => {\r\n    console.error('❌ [一百件事API] 获取任务列表失败');\r\n    console.error('🔴 错误信息:', error);\r\n    throw error;\r\n  });\r\n}\r\n\r\n/**\r\n * 获取用户进度\r\n * @returns {Promise<Object>} 返回进度信息\r\n * \r\n * 后端接口要求：\r\n * - 请求方法：GET\r\n * - 请求地址：/api/challenge/progress\r\n * - 请求头：需携带 Authorization token\r\n * - 返回数据格式：\r\n *   {\r\n *     success: true,\r\n *     message: \"获取成功\",\r\n *     progress: {\r\n *       totalTasks: number,\r\n *       completedCount: number,\r\n *       favoritedCount: number,\r\n *       completionRate: number,\r\n *       lastActiveAt: string\r\n *     }\r\n *   }\r\n */\r\nexport function getProgress() {\r\n  const url = config.API.CHALLENGE.PROGRESS;\r\n  const fullUrl = config.baseURL + url;\r\n  \r\n  console.log('🔗 [一百件事API] 开始请求用户进度');\r\n  console.log('📍 请求地址:', fullUrl);\r\n  console.log('📋 请求方法: GET');\r\n  console.log('⏰ 请求时间:', new Date().toLocaleString());\r\n  \r\n  return http.get(url).then(response => {\r\n    console.log('✅ [一百件事API] 获取用户进度成功');\r\n    console.log('📦 响应数据:', response);\r\n    \r\n    if (response && response.progress) {\r\n      const progress = response.progress;\r\n      console.log('📊 进度统计:');\r\n      console.log(`   - 总任务数: ${progress.totalTasks}`);\r\n      console.log(`   - 已完成: ${progress.completedCount}`);\r\n      console.log(`   - 已收藏: ${progress.favoritedCount}`);\r\n      console.log(`   - 完成率: ${progress.completionRate}%`);\r\n      console.log(`   - 最后活跃: ${progress.lastActiveAt || '未知'}`);\r\n    }\r\n    \r\n    return response;\r\n  }).catch(error => {\r\n    console.error('❌ [一百件事API] 获取用户进度失败');\r\n    console.error('🔴 错误信息:', error);\r\n    throw error;\r\n  });\r\n}\r\n\r\n/**\r\n * 添加自定义任务\r\n * @param {Object} taskData - 任务数据\r\n * @param {string} taskData.taskName - 任务名称（必填）\r\n * @param {string} [taskData.taskDescription] - 任务描述（可选）\r\n * @returns {Promise<Object>} 返回添加结果\r\n * \r\n * 后端接口要求：\r\n * - 请求方法：POST\r\n * - 请求地址：/api/challenge/task/add\r\n * - 请求头：需携带 Authorization token\r\n * - 请求参数：\r\n *   {\r\n *     taskName: string,\r\n *     taskDescription?: string\r\n *   }\r\n */\r\nexport function addTask(taskData) {\r\n  const url = config.API.CHALLENGE.ADD;\r\n  const fullUrl = config.baseURL + url;\r\n  \r\n  console.log('🔗 [一百件事API] 开始添加自定义任务');\r\n  console.log('📍 请求地址:', fullUrl);\r\n  console.log('📋 请求方法: POST');\r\n  console.log('📤 请求参数:', taskData);\r\n  console.log('⏰ 请求时间:', new Date().toLocaleString());\r\n  \r\n  return http.post(url, {\r\n    taskName: taskData.taskName,\r\n    taskDescription: taskData.taskDescription || ''\r\n  }).then(response => {\r\n    console.log('✅ [一百件事API] 添加任务成功');\r\n    console.log('📦 响应数据:', response);\r\n    \r\n    if (response && response.task) {\r\n      console.log(`📝 新任务ID: ${response.task.id}`);\r\n      console.log(`📝 任务名称: ${response.task.taskName}`);\r\n    }\r\n    \r\n    return response;\r\n  }).catch(error => {\r\n    console.error('❌ [一百件事API] 添加任务失败');\r\n    console.error('🔴 错误信息:', error);\r\n    throw error;\r\n  });\r\n}\r\n\r\n/**\r\n * 删除自定义任务\r\n * @param {number} taskId - 任务ID\r\n * @returns {Promise<Object>} 返回删除结果\r\n * \r\n * 后端接口要求：\r\n * - 请求方法：POST\r\n * - 请求地址：/api/challenge/task/delete\r\n * - 请求头：需携带 Authorization token\r\n * - 请求参数：\r\n *   {\r\n *     taskId: number\r\n *   }\r\n */\r\nexport function deleteTask(taskId) {\r\n  const url = config.API.CHALLENGE.DELETE;\r\n  const fullUrl = config.baseURL + url;\r\n  \r\n  console.log('🔗 [一百件事API] 开始删除任务');\r\n  console.log('📍 请求地址:', fullUrl);\r\n  console.log('📋 请求方法: POST');\r\n  console.log('📤 请求参数: { taskId:', taskId, '}');\r\n  console.log('⏰ 请求时间:', new Date().toLocaleString());\r\n  \r\n  return http.post(url, { taskId }).then(response => {\r\n    console.log('✅ [一百件事API] 删除任务成功');\r\n    console.log('📦 响应数据:', response);\r\n    console.log(`🗑️ 已删除任务ID: ${taskId}`);\r\n    \r\n    return response;\r\n  }).catch(error => {\r\n    console.error('❌ [一百件事API] 删除任务失败');\r\n    console.error('🔴 错误信息:', error);\r\n    throw error;\r\n  });\r\n}\r\n\r\n/**\r\n * 标记任务完成/取消完成\r\n * @param {Object} completeData - 完成数据\r\n * @param {number} completeData.taskId - 任务ID（必填）\r\n * @param {boolean} completeData.completed - 是否完成（必填）\r\n * @param {string} [completeData.photoUrl] - 完成时上传的照片URL（可选）\r\n * @param {string} [completeData.note] - 完成时的备注说明（可选）\r\n * @returns {Promise<Object>} 返回操作结果\r\n * \r\n * 后端接口要求：\r\n * - 请求方法：POST\r\n * - 请求地址：/api/challenge/complete\r\n * - 请求头：需携带 Authorization token\r\n * - 请求参数：\r\n *   {\r\n *     taskId: number,\r\n *     completed: boolean,\r\n *     photoUrl?: string,\r\n *     note?: string\r\n *   }\r\n */\r\nexport function completeTask(completeData) {\r\n  const url = config.API.CHALLENGE.COMPLETE;\r\n  const fullUrl = config.baseURL + url;\r\n  \r\n  const action = completeData.completed ? '标记完成' : '取消完成';\r\n  console.log(`🔗 [一百件事API] 开始${action}任务`);\r\n  console.log('📍 请求地址:', fullUrl);\r\n  console.log('📋 请求方法: POST');\r\n  console.log('📤 请求参数:', completeData);\r\n  console.log('⏰ 请求时间:', new Date().toLocaleString());\r\n  \r\n  return http.post(url, {\r\n    taskId: completeData.taskId,\r\n    completed: completeData.completed,\r\n    photoUrl: completeData.photoUrl || null,\r\n    note: completeData.note || null\r\n  }).then(response => {\r\n    console.log(`✅ [一百件事API] ${action}任务成功`);\r\n    console.log('📦 响应数据:', response);\r\n    console.log(`📝 任务ID: ${completeData.taskId}, 状态: ${completeData.completed ? '已完成' : '未完成'}`);\r\n    \r\n    return response;\r\n  }).catch(error => {\r\n    console.error(`❌ [一百件事API] ${action}任务失败`);\r\n    console.error('🔴 错误信息:', error);\r\n    throw error;\r\n  });\r\n}\r\n\r\n/**\r\n * 收藏/取消收藏任务\r\n * @param {Object} favoriteData - 收藏数据\r\n * @param {number} favoriteData.taskId - 任务ID（必填）\r\n * @param {boolean} favoriteData.favorited - 是否收藏（必填）\r\n * @returns {Promise<Object>} 返回操作结果\r\n * \r\n * 后端接口要求：\r\n * - 请求方法：POST\r\n * - 请求地址：/api/challenge/favorite\r\n * - 请求头：需携带 Authorization token\r\n * - 请求参数：\r\n *   {\r\n *     taskId: number,\r\n *     favorited: boolean\r\n *   }\r\n */\r\nexport function favoriteTask(favoriteData) {\r\n  const url = config.API.CHALLENGE.FAVORITE;\r\n  const fullUrl = config.baseURL + url;\r\n  \r\n  const action = favoriteData.favorited ? '收藏' : '取消收藏';\r\n  console.log(`🔗 [一百件事API] 开始${action}任务`);\r\n  console.log('📍 请求地址:', fullUrl);\r\n  console.log('📋 请求方法: POST');\r\n  console.log('📤 请求参数:', favoriteData);\r\n  console.log('⏰ 请求时间:', new Date().toLocaleString());\r\n  \r\n  return http.post(url, {\r\n    taskId: favoriteData.taskId,\r\n    favorited: favoriteData.favorited\r\n  }).then(response => {\r\n    console.log(`✅ [一百件事API] ${action}任务成功`);\r\n    console.log('📦 响应数据:', response);\r\n    console.log(`⭐ 任务ID: ${favoriteData.taskId}, 收藏状态: ${favoriteData.favorited ? '已收藏' : '未收藏'}`);\r\n    \r\n    return response;\r\n  }).catch(error => {\r\n    console.error(`❌ [一百件事API] ${action}任务失败`);\r\n    console.error('🔴 错误信息:', error);\r\n    throw error;\r\n  });\r\n}\r\n\r\n"],"names":["config","uni","http"],"mappings":"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"}