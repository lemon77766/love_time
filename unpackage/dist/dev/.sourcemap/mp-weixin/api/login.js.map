{"version":3,"file":"login.js","sources":["api/login.js"],"sourcesContent":["/**\r\n * 登录相关 API\r\n */\r\n\r\nimport http from '../utils/http.js';\r\nimport config from '../utils/config.js';\r\n\r\n/**\r\n * 微信登录\r\n * @param {string} code - 微信登录凭证\r\n * @param {Object} userInfo - 用户信息\r\n * @returns {Promise<Object>} 返回登录结果\r\n * \r\n * 后端接口要求：\r\n * - 请求方法：POST\r\n * - 请求地址：/api/login/wechat\r\n * - 请求参数：\r\n *   {\r\n *     code: string,        // 微信登录凭证（必填）\r\n *     nickName: string,    // 用户昵称（必填）\r\n *     avatarUrl: string    // 用户头像（必填）\r\n *   }\r\n * - 返回数据：\r\n *   {\r\n *     success: true,\r\n *     message: \"登录成功\",\r\n *     data: {\r\n *       token: string,         // 登录凭证，后续请求需携带\r\n *       openid: string,        // 微信用户唯一标识\r\n *       session_key: string,   // 会话密钥\r\n *       userId: string,        // 用户ID（可选）\r\n *       isNewUser: boolean     // 是否新用户（可选）\r\n *     }\r\n *   }\r\n */\r\nexport function wxLogin(code, userInfo) {\r\n  return http.post(config.API.LOGIN.WECHAT, {\r\n    code: code,\r\n    nickName: userInfo.nickName,\r\n    avatarUrl: userInfo.avatarUrl\r\n  });\r\n}\r\n\r\n/**\r\n * 退出登录\r\n * @returns {Promise<Object>} 返回退出结果\r\n */\r\nexport function logout() {\r\n  return new Promise((resolve, reject) => {\r\n    // 先清除本地存储\r\n    try {\r\n      uni.removeStorageSync('login_info');\r\n    } catch (e) {\r\n      console.error('清除本地登录信息失败', e);\r\n    }\r\n\r\n    // 尝试调用后端登出接口\r\n    http.post(config.API.LOGIN.LOGOUT)\r\n      .then(() => {\r\n        resolve({ success: true, message: '退出成功' });\r\n      })\r\n      .catch((error) => {\r\n        console.warn('后端登出接口调用失败，但本地登录状态已清除', error);\r\n        // 即使后端请求失败，也认为登出成功（因为本地状态已清除）\r\n        resolve({ success: true, message: '退出成功' });\r\n      });\r\n  });\r\n}\r\n\r\n/**\r\n * 获取用户信息\r\n * @returns {Promise<Object>} 返回用户信息\r\n * \r\n * 后端接口要求：\r\n * - 请求方法：GET\r\n * - 请求地址：/api/user/info\r\n * - 请求头：需携带 Authorization token\r\n * - 返回数据：\r\n *   {\r\n *     success: true,\r\n *     data: {\r\n *       userId: string,\r\n *       nickName: string,\r\n *       avatarUrl: string,\r\n *       phone: string,\r\n *       // ... 其他用户信息\r\n *     }\r\n *   }\r\n */\r\nexport function getUserInfo() {\r\n  return http.get(config.API.USER.INFO);\r\n}\r\n"],"names":["http","config"],"mappings":";;;;AAmCO,SAAS,QAAQ,MAAM,UAAU;AACtC,SAAOA,WAAAA,KAAK,KAAKC,aAAAA,OAAO,IAAI,MAAM,QAAQ;AAAA,IACxC;AAAA,IACA,UAAU,SAAS;AAAA,IACnB,WAAW,SAAS;AAAA,EACxB,CAAG;AACH;;"}