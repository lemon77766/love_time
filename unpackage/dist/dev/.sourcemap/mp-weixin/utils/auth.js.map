{"version":3,"file":"auth.js","sources":["utils/auth.js"],"sourcesContent":["/**\r\n * 登录认证工具函数\r\n */\r\n\r\n/**\r\n * 检查是否已登录\r\n * @returns {boolean} 是否已登录\r\n */\r\nexport function isLoggedIn() {\r\n  try {\r\n    const loginInfo = uni.getStorageSync('login_info');\r\n    return loginInfo && loginInfo.isLoggedIn === true;\r\n  } catch (e) {\r\n    console.error('检查登录状态失败', e);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * 获取当前登录用户信息\r\n * @returns {object|null} 用户信息对象或null\r\n */\r\nexport function getUserInfo() {\r\n  try {\r\n    const loginInfo = uni.getStorageSync('login_info');\r\n    return loginInfo && loginInfo.userInfo ? loginInfo.userInfo : null;\r\n  } catch (e) {\r\n    console.error('获取用户信息失败', e);\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * 保存登录信息\r\n * @param {object} userInfo - 用户信息对象\r\n * @returns {boolean} 是否保存成功\r\n */\r\nexport function saveLoginInfo(userInfo) {\r\n  try {\r\n    const loginInfo = {\r\n      isLoggedIn: true,\r\n      userInfo: userInfo,\r\n      loginTime: new Date().toISOString()\r\n    };\r\n    uni.setStorageSync('login_info', loginInfo);\r\n    return true;\r\n  } catch (e) {\r\n    console.error('保存登录信息失败', e);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * 退出登录\r\n * @returns {boolean} 是否退出成功\r\n */\r\nexport function logout() {\r\n  try {\r\n    uni.removeStorageSync('login_info');\r\n    return true;\r\n  } catch (e) {\r\n    console.error('退出登录失败', e);\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * 跳转到登录页\r\n */\r\nexport function goToLogin() {\r\n  uni.reLaunch({\r\n    url: '/pages/login/index'\r\n  });\r\n}\r\n\r\n/**\r\n * 检查登录状态，未登录则跳转登录页\r\n * @returns {boolean} 是否已登录\r\n */\r\nexport function checkLogin() {\r\n  const loggedIn = isLoggedIn();\r\n  if (!loggedIn) {\r\n    goToLogin();\r\n  }\r\n  return loggedIn;\r\n}\r\n"],"names":["uni"],"mappings":";;AAwDO,SAAS,SAAS;AACvB,MAAI;AACFA,wBAAI,kBAAkB,YAAY;AAClC,WAAO;AAAA,EACR,SAAQ,GAAG;AACVA,kBAAc,MAAA,MAAA,SAAA,uBAAA,UAAU,CAAC;AACzB,WAAO;AAAA,EACR;AACH;;"}