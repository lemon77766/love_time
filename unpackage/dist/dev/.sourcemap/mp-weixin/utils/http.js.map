{"version":3,"file":"http.js","sources":["utils/http.js"],"sourcesContent":["/**\r\n * HTTP 请求封装工具\r\n * 统一处理请求、响应、错误\r\n */\r\n\r\nimport config from './config.js';\r\n\r\nclass Http {\r\n  /**\r\n   * 发送HTTP请求\r\n   * @param {Object} options - 请求配置\r\n   * @returns {Promise} 返回Promise对象\r\n   */\r\n  request(options = {}) {\r\n    return new Promise((resolve, reject) => {\r\n      // 获取存储的登录信息\r\n      const loginInfo = uni.getStorageSync('login_info') || {};\r\n      \r\n      // 构建完整的请求URL\r\n      const url = config.baseURL + options.url;\r\n      \r\n      console.log(`\\n=== HTTP ${options.method || 'GET'} 请求 ===`);\r\n      console.log('请求URL:', url);\r\n      console.log('请求数据:', options.data);\r\n      \r\n      // 请求配置\r\n      const requestOptions = {\r\n        url: url,\r\n        method: options.method || 'GET',\r\n        data: options.data || {},\r\n        header: {\r\n          'content-type': 'application/json',\r\n          // 如果已登录，携带token\r\n          'Authorization': loginInfo.token ? `Bearer ${loginInfo.token}` : '',\r\n          ...options.header\r\n        },\r\n        timeout: options.timeout || config.timeout,\r\n        success: (res) => {\r\n          console.log('✅ 请求成功，响应状态码:', res.statusCode);\r\n          console.log('响应数据:', res.data);\r\n          \r\n          // 根据状态码处理\r\n          if (res.statusCode === 200) {\r\n            // 检查业务状态\r\n            if (res.data.success) {\r\n              console.log('✅ 业务请求成功，返回数据:', res.data.data);\r\n              resolve(res.data.data);\r\n            } else {\r\n              console.error('❌ 业务错误:', res.data.message);\r\n              reject(new Error(res.data.message || '请求失败'));\r\n            }\r\n          } else if (res.statusCode === 401) {\r\n            // token过期或未登录\r\n            console.error('❌ 401 未授权');\r\n            this.handleUnauthorized();\r\n            reject(new Error('登录已过期，请重新登录'));\r\n          } else {\r\n            console.error('❌ HTTP错误:', res.statusCode);\r\n            reject(new Error(`请求失败: ${res.statusCode}`));\r\n          }\r\n        },\r\n        fail: (err) => {\r\n          console.error('❌ 请求失败:', url);\r\n          console.error('错误详情:', err);\r\n          \r\n          // 开发环境提示\r\n          if (process.env.NODE_ENV === 'development') {\r\n            console.warn('⚠️ 开发模式：后端接口未就绪或网络错误');\r\n            console.warn('⚠️ 请检查：');\r\n            console.warn('  1. 后端服务是否已启动');\r\n            console.warn('  2. 请求地址是否正确');\r\n            console.warn('  3. 网络是否连通');\r\n          }\r\n          \r\n          reject(err);\r\n        }\r\n      };\r\n      \r\n      // 发送请求\r\n      uni.request(requestOptions);\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * GET 请求\r\n   */\r\n  get(url, data = {}, options = {}) {\r\n    return this.request({\r\n      url,\r\n      method: 'GET',\r\n      data,\r\n      ...options\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * POST 请求\r\n   */\r\n  post(url, data = {}, options = {}) {\r\n    return this.request({\r\n      url,\r\n      method: 'POST',\r\n      data,\r\n      ...options\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * PUT 请求\r\n   */\r\n  put(url, data = {}, options = {}) {\r\n    return this.request({\r\n      url,\r\n      method: 'PUT',\r\n      data,\r\n      ...options\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * DELETE 请求\r\n   */\r\n  delete(url, data = {}, options = {}) {\r\n    return this.request({\r\n      url,\r\n      method: 'DELETE',\r\n      data,\r\n      ...options\r\n    });\r\n  }\r\n  \r\n  /**\r\n   * 处理未授权（401）\r\n   */\r\n  handleUnauthorized() {\r\n    // 清除登录信息\r\n    uni.removeStorageSync('login_info');\r\n    \r\n    // 提示用户\r\n    uni.showToast({\r\n      title: '登录已过期',\r\n      icon: 'none',\r\n      duration: 2000\r\n    });\r\n    \r\n    // 跳转到登录页\r\n    setTimeout(() => {\r\n      uni.reLaunch({\r\n        url: '/pages/login/index'\r\n      });\r\n    }, 2000);\r\n  }\r\n}\r\n\r\n// 导出单例\r\nexport default new Http();\r\n"],"names":["uni","config"],"mappings":"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"}