{"version":3,"file":"http.js","sources":["utils/http.js"],"sourcesContent":["import config from './config'\r\nimport { isLoggedIn, logout } from './auth'\r\n\r\n// 默认请求配置\r\nconst defaultOptions = {\r\n  timeout: config.timeout,\r\n  retryCount: 0,  // 默认不重试\r\n  retryDelay: 1000,  // 重试间隔1秒\r\n}\r\n\r\n// 处理请求错误\r\nfunction handleRequestError(error, options = {}) {\r\n  console.error('请求错误:', error)\r\n  \r\n  // 开发环境下显示详细错误信息\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.warn('⚠️ 开发模式：后端接口未就绪或网络错误')\r\n    console.warn('⚠️ 请检查：')\r\n    console.warn('  1. 后端服务是否已启动')\r\n    console.warn('  2. 请求地址是否正确')\r\n    console.warn('  3. 网络是否连通')\r\n  }\r\n  \r\n  // 401错误处理\r\n  if (error.statusCode === 401) {\r\n    handleUnauthorized()\r\n    return\r\n  }\r\n  \r\n  // 超时错误特殊处理\r\n  if (error.errMsg && error.errMsg.includes('timeout')) {\r\n    if (options.retryCount > 0) {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          console.log(`请求超时，${options.retryDelay/1000}秒后重试，剩余重试次数：${options.retryCount-1}`)\r\n          options.retryCount--\r\n          request(options).then(resolve).catch(reject)\r\n        }, options.retryDelay)\r\n      })\r\n    }\r\n  }\r\n  \r\n  return Promise.reject(error)\r\n}\r\n\r\n// 处理未授权情况\r\nfunction handleUnauthorized() {\r\n  if (isLoggedIn()) {\r\n    uni.showToast({\r\n      title: '登录已过期，请重新登录',\r\n      icon: 'none',\r\n      duration: 2000\r\n    })\r\n    logout()\r\n  }\r\n}\r\n\r\n// 基础请求方法\r\nfunction request(options) {\r\n  // 合并默认配置\r\n  options = { ...defaultOptions, ...options }\r\n  \r\n  // 处理请求URL\r\n  const originalUrl = options.url\r\n  if (!options.url.startsWith('http')) {\r\n    options.url = config.baseURL + options.url\r\n  }\r\n  \r\n  // 判断是否为登录接口（登录接口不需要token）\r\n  const isLoginApi = options.url.includes('/api/login/') && \r\n                     !options.url.includes('/api/login/logout')\r\n  \r\n  // 判断是否为一百件事相关API\r\n  const isChallengeApi = options.url.includes('/api/challenge/')\r\n  \r\n  // 添加token（登录接口除外）\r\n  const loginInfo = uni.getStorageSync('login_info')\r\n  let token = null\r\n  \r\n  // 尝试从多个可能的路径获取token\r\n  if (loginInfo) {\r\n    token = loginInfo.token || loginInfo.data?.token || loginInfo.accessToken || null\r\n    // 确保token是字符串且不为空\r\n    if (token && typeof token === 'string' && token.trim()) {\r\n      token = token.trim()\r\n    } else {\r\n      token = null\r\n    }\r\n  }\r\n  \r\n  // 调试信息：检查token是否存在（登录接口除外）\r\n  if (process.env.NODE_ENV === 'development' && !isLoginApi) {\r\n    if (!token) {\r\n      console.warn('⚠️ Token未找到，请求可能失败')\r\n      console.warn('⚠️ 登录信息:', loginInfo)\r\n      if (loginInfo?.isGuest) {\r\n        console.warn('⚠️ 检测到游客登录，游客登录不支持需要认证的API')\r\n      } else if (loginInfo) {\r\n        console.warn('⚠️ 登录信息存在，但token为空。可能的原因：')\r\n        console.warn('   1. 后端返回的token字段名不是\"token\"')\r\n        console.warn('   2. 后端返回的数据结构不符合预期')\r\n        console.warn('   3. 登录时token提取失败')\r\n      } else {\r\n        console.warn('⚠️ 未找到登录信息，请先登录')\r\n      }\r\n    } else {\r\n      console.log('✅ Token已找到，长度:', token.length)\r\n    }\r\n  }\r\n  \r\n  if (token) {\r\n    options.header = {\r\n      ...options.header,\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  } else if (!isLoginApi) {\r\n    // 如果没有token且不是登录接口，添加警告\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.warn('⚠️ 请求未携带Authorization头，可能导致401错误')\r\n      console.warn('⚠️ 当前请求URL:', options.url)\r\n    }\r\n  }\r\n  \r\n  // 开发环境下记录请求信息（特别是一百件事相关API）\r\n  if (process.env.NODE_ENV === 'development' && isChallengeApi) {\r\n    console.log('🔗 [HTTP请求] 一百件事API');\r\n    console.log('📍 完整URL:', options.url);\r\n    console.log('📋 请求方法:', options.method || 'GET');\r\n    if (options.data) {\r\n      console.log('📤 请求参数:', options.data);\r\n    }\r\n    if (token) {\r\n      console.log('🔑 认证Token: 已携带');\r\n    } else {\r\n      console.warn('⚠️ 认证Token: 未携带，可能失败');\r\n    }\r\n    console.log('⏰ 请求时间:', new Date().toLocaleString());\r\n  }\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    uni.request({\r\n      ...options,\r\n      success: (res) => {\r\n        if (res.statusCode >= 200 && res.statusCode < 300) {\r\n          // 开发环境下记录响应数据，帮助调试\r\n          if (process.env.NODE_ENV === 'development') {\r\n            if (isChallengeApi) {\r\n              console.log('✅ [HTTP响应] 一百件事API请求成功');\r\n              console.log('📍 响应URL:', options.url);\r\n              console.log('📊 状态码:', res.statusCode);\r\n              console.log('📦 响应数据:', res.data);\r\n              console.log('⏰ 响应时间:', new Date().toLocaleString());\r\n            } else {\r\n              console.log('📥 API响应:', {\r\n                url: options.url,\r\n                statusCode: res.statusCode,\r\n                data: res.data\r\n              })\r\n            }\r\n          }\r\n          \r\n          // 如果后端返回的格式是 { success: false, message: \"...\" }，应该作为错误处理\r\n          if (res.data && typeof res.data === 'object' && res.data.success === false) {\r\n            const error = new Error(res.data.message || '请求失败')\r\n            error.statusCode = res.statusCode\r\n            error.data = res.data\r\n            reject(error)\r\n            return\r\n          }\r\n          \r\n          resolve(res.data)\r\n        } else {\r\n          reject(res)\r\n        }\r\n      },\r\n      fail: (error) => {\r\n        // 特别记录一百件事API的错误\r\n        if (process.env.NODE_ENV === 'development' && isChallengeApi) {\r\n          console.error('❌ [HTTP错误] 一百件事API请求失败');\r\n          console.error('📍 请求URL:', options.url);\r\n          console.error('🔴 错误信息:', error);\r\n          console.error('⏰ 错误时间:', new Date().toLocaleString());\r\n        }\r\n        handleRequestError(error, options)\r\n          .then(resolve)\r\n          .catch(reject)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// 文件上传方法\r\nfunction upload(options) {\r\n  // 合并默认配置\r\n  options = {\r\n    ...defaultOptions,\r\n    timeout: config.uploadTimeout || 30000,  // 上传默认30秒超时\r\n    header: {\r\n      'content-type': 'multipart/form-data'\r\n    },\r\n    ...options\r\n  }\r\n  \r\n  // 处理请求URL\r\n  if (!options.url.startsWith('http')) {\r\n    options.url = config.baseURL + options.url\r\n  }\r\n  \r\n  // 添加token\r\n  const loginInfo = uni.getStorageSync('login_info')\r\n  const token = loginInfo?.token\r\n  \r\n  if (token) {\r\n    options.header['Authorization'] = `Bearer ${token}`\r\n  } else {\r\n    console.warn('⚠️ 上传请求未携带Authorization头，可能导致401错误')\r\n  }\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    uni.uploadFile({\r\n      ...options,\r\n      success: (uploadRes) => {\r\n        try {\r\n          const result = JSON.parse(uploadRes.data)\r\n          if (result.success) {\r\n            resolve(result.data)\r\n          } else {\r\n            reject(new Error(result.message || '上传失败'))\r\n          }\r\n        } catch (e) {\r\n          reject(new Error('解析上传响应失败'))\r\n        }\r\n      },\r\n      fail: (error) => {\r\n        handleRequestError(error, options)\r\n          .then(resolve)\r\n          .catch(reject)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// HTTP方法封装\r\nconst http = {\r\n  request,\r\n  upload,\r\n  get: (url, data, options = {}) => request({ ...options, url, data, method: 'GET' }),\r\n  post: (url, data, options = {}) => request({ ...options, url, data, method: 'POST' }),\r\n  put: (url, data, options = {}) => request({ ...options, url, data, method: 'PUT' }),\r\n  delete: (url, data, options = {}) => request({ ...options, url, data, method: 'DELETE' })\r\n}\r\n\r\nexport default http\r\n"],"names":["config","uni","isLoggedIn","logout"],"mappings":"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"}