{"version":3,"file":"http.js","sources":["utils/http.js"],"sourcesContent":["import config from './config'\r\nimport { isLoggedIn, logout } from './auth'\r\n\r\n// 默认请求配置\r\nconst defaultOptions = {\r\n  timeout: config.timeout,\r\n  retryCount: 0,  // 默认不重试\r\n  retryDelay: 1000,  // 重试间隔1秒\r\n}\r\n\r\n// 处理请求错误\r\nfunction handleRequestError(error, options = {}) {\r\n  console.error('请求错误:', error)\r\n  \r\n  // 开发环境下显示详细错误信息\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.warn('⚠️ 开发模式：后端接口未就绪或网络错误')\r\n    console.warn('⚠️ 请检查：')\r\n    console.warn('  1. 后端服务是否已启动')\r\n    console.warn('  2. 请求地址是否正确')\r\n    console.warn('  3. 网络是否连通')\r\n  }\r\n  \r\n  // 401错误处理\r\n  if (error.statusCode === 401) {\r\n    handleUnauthorized()\r\n    return\r\n  }\r\n  \r\n  // 超时错误特殊处理\r\n  if (error.errMsg && error.errMsg.includes('timeout')) {\r\n    if (options.retryCount > 0) {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          console.log(`请求超时，${options.retryDelay/1000}秒后重试，剩余重试次数：${options.retryCount-1}`)\r\n          options.retryCount--\r\n          request(options).then(resolve).catch(reject)\r\n        }, options.retryDelay)\r\n      })\r\n    }\r\n  }\r\n  \r\n  return Promise.reject(error)\r\n}\r\n\r\n// 处理未授权情况\r\nfunction handleUnauthorized() {\r\n  if (isLoggedIn()) {\r\n    uni.showToast({\r\n      title: '登录已过期，请重新登录',\r\n      icon: 'none',\r\n      duration: 2000\r\n    })\r\n    logout()\r\n  }\r\n}\r\n\r\n// 基础请求方法\r\nfunction request(options) {\r\n  // 合并默认配置\r\n  options = { ...defaultOptions, ...options }\r\n  \r\n  // 处理请求URL\r\n  if (!options.url.startsWith('http')) {\r\n    options.url = config.baseURL + options.url\r\n  }\r\n  \r\n  // 添加token\r\n  const token = uni.getStorageSync('login_info')?.token\r\n  if (token) {\r\n    options.header = {\r\n      ...options.header,\r\n      'Authorization': `Bearer ${token}`\r\n    }\r\n  }\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    uni.request({\r\n      ...options,\r\n      success: (res) => {\r\n        if (res.statusCode >= 200 && res.statusCode < 300) {\r\n          resolve(res.data)\r\n        } else {\r\n          reject(res)\r\n        }\r\n      },\r\n      fail: (error) => {\r\n        handleRequestError(error, options)\r\n          .then(resolve)\r\n          .catch(reject)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// 文件上传方法\r\nfunction upload(options) {\r\n  // 合并默认配置\r\n  options = {\r\n    ...defaultOptions,\r\n    timeout: config.uploadTimeout || 30000,  // 上传默认30秒超时\r\n    header: {\r\n      'content-type': 'multipart/form-data'\r\n    },\r\n    ...options\r\n  }\r\n  \r\n  // 处理请求URL\r\n  if (!options.url.startsWith('http')) {\r\n    options.url = config.baseURL + options.url\r\n  }\r\n  \r\n  // 添加token\r\n  const token = uni.getStorageSync('login_info')?.token\r\n  if (token) {\r\n    options.header['Authorization'] = `Bearer ${token}`\r\n  }\r\n  \r\n  return new Promise((resolve, reject) => {\r\n    uni.uploadFile({\r\n      ...options,\r\n      success: (uploadRes) => {\r\n        try {\r\n          const result = JSON.parse(uploadRes.data)\r\n          if (result.success) {\r\n            resolve(result.data)\r\n          } else {\r\n            reject(new Error(result.message || '上传失败'))\r\n          }\r\n        } catch (e) {\r\n          reject(new Error('解析上传响应失败'))\r\n        }\r\n      },\r\n      fail: (error) => {\r\n        handleRequestError(error, options)\r\n          .then(resolve)\r\n          .catch(reject)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// HTTP方法封装\r\nconst http = {\r\n  request,\r\n  upload,\r\n  get: (url, data, options = {}) => request({ ...options, url, data, method: 'GET' }),\r\n  post: (url, data, options = {}) => request({ ...options, url, data, method: 'POST' }),\r\n  put: (url, data, options = {}) => request({ ...options, url, data, method: 'PUT' }),\r\n  delete: (url, data, options = {}) => request({ ...options, url, data, method: 'DELETE' })\r\n}\r\n\r\nexport default http\r\n"],"names":["config","uni","isLoggedIn","logout"],"mappings":";;;;AAIA,MAAM,iBAAiB;AAAA,EACrB,SAASA,aAAO,OAAA;AAAA,EAChB,YAAY;AAAA;AAAA,EACZ,YAAY;AAAA;AACd;AAGA,SAAS,mBAAmB,OAAO,UAAU,IAAI;AAC/CC,gBAAA,MAAc,MAAA,SAAA,uBAAA,SAAS,KAAK;AAGgB;AAC7BA,kBAAAA,MAAA,MAAA,QAAA,uBAAA,sBAAsB;AACnCA,kBAAAA,MAAA,MAAA,QAAA,uBAAa,SAAS;AACtBA,kBAAAA,MAAA,MAAA,QAAA,uBAAa,gBAAgB;AAC7BA,kBAAAA,MAAA,MAAA,QAAA,uBAAa,eAAe;6DACf,aAAa;AAAA,EAC5B;AAGI,MAAA,MAAM,eAAe,KAAK;AACT;AACnB;AAAA,EACF;AAGA,MAAI,MAAM,UAAU,MAAM,OAAO,SAAS,SAAS,GAAG;AAChD,QAAA,QAAQ,aAAa,GAAG;AAC1B,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,mBAAW,MAAM;AACfA,wBAAAA,MAAA,MAAA,OAAA,uBAAY,QAAQ,QAAQ,aAAW,GAAI,eAAe,QAAQ,aAAW,CAAC,EAAE;AACxE,kBAAA;AACR,kBAAQ,OAAO,EAAE,KAAK,OAAO,EAAE,MAAM,MAAM;AAAA,QAAA,GAC1C,QAAQ,UAAU;AAAA,MAAA,CACtB;AAAA,IACH;AAAA,EACF;AAEO,SAAA,QAAQ,OAAO,KAAK;AAC7B;AAGA,SAAS,qBAAqB;AAC5B,MAAIC,yBAAc;AAChBD,kBAAAA,MAAI,UAAU;AAAA,MACZ,OAAO;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IAAA,CACX;AACME,eAAAA;EACT;AACF;AAGA,SAAS,QAAQ,SAAS;;AAExB,YAAU,EAAE,GAAG,gBAAgB,GAAG,QAAQ;AAG1C,MAAI,CAAC,QAAQ,IAAI,WAAW,MAAM,GAAG;AAC3B,YAAA,MAAMH,aAAAA,OAAO,UAAU,QAAQ;AAAA,EACzC;AAGA,QAAM,SAAQC,mBAAA,MAAI,eAAe,YAAY,MAA/BA,mBAAkC;AAChD,MAAI,OAAO;AACT,YAAQ,SAAS;AAAA,MACf,GAAG,QAAQ;AAAA,MACX,iBAAiB,UAAU,KAAK;AAAA,IAAA;AAAA,EAEpC;AAEA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCA,kBAAAA,MAAI,QAAQ;AAAA,MACV,GAAG;AAAA,MACH,SAAS,CAAC,QAAQ;AAChB,YAAI,IAAI,cAAc,OAAO,IAAI,aAAa,KAAK;AACjD,kBAAQ,IAAI,IAAI;AAAA,QAAA,OACX;AACL,iBAAO,GAAG;AAAA,QACZ;AAAA,MACF;AAAA,MACA,MAAM,CAAC,UAAU;AACf,2BAAmB,OAAO,OAAO,EAC9B,KAAK,OAAO,EACZ,MAAM,MAAM;AAAA,MACjB;AAAA,IAAA,CACD;AAAA,EAAA,CACF;AACH;AAGA,SAAS,OAAO,SAAS;;AAEb,YAAA;AAAA,IACR,GAAG;AAAA,IACH,SAASD,oBAAO;AAAA;AAAA,IAChB,QAAQ;AAAA,MACN,gBAAgB;AAAA,IAClB;AAAA,IACA,GAAG;AAAA,EAAA;AAIL,MAAI,CAAC,QAAQ,IAAI,WAAW,MAAM,GAAG;AAC3B,YAAA,MAAMA,aAAAA,OAAO,UAAU,QAAQ;AAAA,EACzC;AAGA,QAAM,SAAQC,mBAAA,MAAI,eAAe,YAAY,MAA/BA,mBAAkC;AAChD,MAAI,OAAO;AACT,YAAQ,OAAO,eAAe,IAAI,UAAU,KAAK;AAAA,EACnD;AAEA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtCA,kBAAAA,MAAI,WAAW;AAAA,MACb,GAAG;AAAA,MACH,SAAS,CAAC,cAAc;AAClB,YAAA;AACF,gBAAM,SAAS,KAAK,MAAM,UAAU,IAAI;AACxC,cAAI,OAAO,SAAS;AAClB,oBAAQ,OAAO,IAAI;AAAA,UAAA,OACd;AACL,mBAAO,IAAI,MAAM,OAAO,WAAW,MAAM,CAAC;AAAA,UAC5C;AAAA,iBACO,GAAG;AACH,iBAAA,IAAI,MAAM,UAAU,CAAC;AAAA,QAC9B;AAAA,MACF;AAAA,MACA,MAAM,CAAC,UAAU;AACf,2BAAmB,OAAO,OAAO,EAC9B,KAAK,OAAO,EACZ,MAAM,MAAM;AAAA,MACjB;AAAA,IAAA,CACD;AAAA,EAAA,CACF;AACH;AAGA,MAAM,OAAO;AAAA,EACX;AAAA,EACA;AAAA,EACA,KAAK,CAAC,KAAK,MAAM,UAAU,CAAA,MAAO,QAAQ,EAAE,GAAG,SAAS,KAAK,MAAM,QAAQ,OAAO;AAAA,EAClF,MAAM,CAAC,KAAK,MAAM,UAAU,CAAA,MAAO,QAAQ,EAAE,GAAG,SAAS,KAAK,MAAM,QAAQ,QAAQ;AAAA,EACpF,KAAK,CAAC,KAAK,MAAM,UAAU,CAAA,MAAO,QAAQ,EAAE,GAAG,SAAS,KAAK,MAAM,QAAQ,OAAO;AAAA,EAClF,QAAQ,CAAC,KAAK,MAAM,UAAU,CAAA,MAAO,QAAQ,EAAE,GAAG,SAAS,KAAK,MAAM,QAAQ,UAAU;AAC1F;;"}