{"version":3,"file":"index.js","sources":["pages/profile/index.vue","D:/softcaree/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcHJvZmlsZS9pbmRleC52dWU"],"sourcesContent":["<template>\n  <view class=\"profile-page\">\n    <!-- 内容区域 -->\n    <view class=\"content\">\n      <!-- 头像设置 -->\n      <view class=\"section\">\n        <text class=\"section-title\">头像设置</text>\n        <view class=\"avatar-section\">\n          <view class=\"current-avatar\">\n            <image class=\"avatar\" :src=\"userInfo.displayAvatar || userInfo.avatarUrl\" mode=\"aspectFill\" />\n            <text class=\"avatar-label\">当前头像</text>\n          </view>\n          \n          <view class=\"avatar-options\">\n            <button class=\"avatar-btn\" @click=\"selectWechatAvatar\">\n              <text class=\"btn-icon\">📱</text>\n              <text class=\"btn-text\">使用微信头像</text>\n            </button>\n            \n            <button class=\"avatar-btn\" @click=\"uploadCustomAvatar\">\n              <text class=\"btn-icon\">🖼️</text>\n              <text class=\"btn-text\">上传自定义头像</text>\n            </button>\n          </view>\n        </view>\n      </view>\n\n      <!-- 昵称设置 -->\n      <view class=\"section\">\n        <text class=\"section-title\">昵称设置</text>\n        <view class=\"nickname-section\">\n          <view class=\"nickname-option\" @click=\"toggleUseWechatNickname\">\n            <view class=\"checkbox\" :class=\"{ checked: useWechatNickname }\"></view>\n            <text class=\"option-text\">使用微信昵称</text>\n            <text class=\"current-nickname\">{{ userInfo.nickName }}</text>\n          </view>\n          \n          <view v-if=\"!useWechatNickname\" class=\"custom-nickname\">\n            <input \n              v-model=\"customNickname\" \n              class=\"nickname-input\" \n              placeholder=\"请输入自定义昵称\"\n              maxlength=\"20\"\n            />\n            <text class=\"char-count\">{{ customNickname.length }}/20</text>\n          </view>\n        </view>\n      </view>\n\n      <!-- 保存按钮 -->\n      <view class=\"save-section\">\n        <button class=\"save-btn\" @click=\"saveProfile\">\n          <text class=\"save-icon\">💾</text>\n          <text class=\"save-text\">保存设置</text>\n        </button>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nimport http from '@/utils/http.js';\nimport config from '@/utils/config.js';\n\nexport default {\n  data() {\n    return {\n      userInfo: {\n        nickName: '',\n        avatarUrl: '',\n        displayName: '',\n        displayAvatar: ''\n      },\n      useWechatNickname: true,\n      customNickname: '',\n      isLoading: false\n    };\n  },\n  \n  onLoad() {\n    this.loadUserInfo();\n  },\n  \n  methods: {\n    // 加载用户信息\n    loadUserInfo() {\n      try {\n        const loginInfo = uni.getStorageSync('login_info');\n        if (loginInfo && loginInfo.userInfo) {\n          this.userInfo = { ...loginInfo.userInfo };\n          this.useWechatNickname = !this.userInfo.displayName || \n            this.userInfo.displayName === this.userInfo.nickName;\n          this.customNickname = this.useWechatNickname ? '' : this.userInfo.displayName;\n        }\n      } catch (error) {\n        console.error('加载用户信息失败', error);\n      }\n    },\n    \n    // 返回上一页（使用系统导航栏的返回按钮）\n    \n    // 使用微信头像\n    selectWechatAvatar() {\n      this.userInfo.displayAvatar = this.userInfo.avatarUrl;\n      uni.showToast({\n        title: '已切换为微信头像',\n        icon: 'success',\n        duration: 1500\n      });\n    },\n    \n    // 上传自定义头像\n    uploadCustomAvatar() {\n      uni.chooseImage({\n        count: 1,\n        sizeType: ['compressed'],\n        sourceType: ['album', 'camera'],\n        success: async (res) => {\n          const tempFilePath = res.tempFilePaths[0];\n          \n          try {\n            uni.showLoading({\n              title: '处理头像中...',\n              mask: true\n            });\n            \n            // 压缩图片\n            const compressedImage = await this.compressImage(tempFilePath);\n            \n            // 尝试上传到服务器\n            try {\n              const uploadResult = await http.upload({\n                url: config.API.USER.AVATAR_UPLOAD,\n                filePath: compressedImage,\n                name: 'avatar',\n                formData: { type: 'avatar' }\n              });\n              this.userInfo.displayAvatar = uploadResult.url || tempFilePath;\n            } catch (uploadError) {\n              // 上传失败，使用本地图片\n              console.warn('头像上传失败，使用本地图片', uploadError);\n              this.userInfo.displayAvatar = tempFilePath;\n            }\n            \n            uni.showToast({\n              title: '头像上传成功',\n              icon: 'success',\n              duration: 1500\n            });\n            \n          } catch (error) {\n            console.error('处理头像失败', error);\n            uni.showToast({\n              title: '头像处理失败',\n              icon: 'none'\n            });\n          } finally {\n            uni.hideLoading();\n          }\n        },\n        fail: (err) => {\n          console.error('选择图片失败', err);\n        }\n      });\n    },\n    \n    // 压缩图片\n    compressImage(tempFilePath) {\n      return new Promise((resolve, reject) => {\n        uni.compressImage({\n          src: tempFilePath,\n          quality: 80,\n          success: (res) => {\n            resolve(res.tempFilePath);\n          },\n          fail: (error) => {\n            console.warn('图片压缩失败，使用原图', error);\n            resolve(tempFilePath);\n          }\n        });\n      });\n    },\n    \n    // 切换是否使用微信昵称\n    toggleUseWechatNickname() {\n      this.useWechatNickname = !this.useWechatNickname;\n      if (this.useWechatNickname) {\n        this.customNickname = '';\n      }\n    },\n    \n    // 保存个人资料\n    saveProfile() {\n      // 验证自定义昵称\n      if (!this.useWechatNickname && !this.customNickname.trim()) {\n        uni.showToast({\n          title: '请输入自定义昵称',\n          icon: 'none'\n        });\n        return;\n      }\n      \n      this.isLoading = true;\n      \n      try {\n        // 构建最终用户信息\n        const displayName = this.useWechatNickname \n          ? this.userInfo.nickName \n          : this.customNickname.trim();\n          \n        const displayAvatar = this.userInfo.displayAvatar || this.userInfo.avatarUrl;\n        \n        // 更新本地存储\n        const loginInfo = uni.getStorageSync('login_info') || {};\n        loginInfo.userInfo = {\n          ...loginInfo.userInfo,\n          displayName,\n          displayAvatar,\n          originalNickName: this.userInfo.nickName,\n          originalAvatarUrl: this.userInfo.avatarUrl\n        };\n        \n        uni.setStorageSync('login_info', loginInfo);\n        \n        uni.showToast({\n          title: '保存成功',\n          icon: 'success',\n          duration: 1500\n        });\n        \n        // 延迟返回\n        setTimeout(() => {\n          uni.navigateBack();\n        }, 1500);\n        \n      } catch (error) {\n        console.error('保存失败', error);\n        uni.showToast({\n          title: '保存失败，请重试',\n          icon: 'none'\n        });\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.profile-page {\n  min-height: 100vh;\n  background: #f5f5f5;\n}\n\n/* 内容区域 */\n.content {\n  padding: 30rpx;\n  margin-top: 20rpx; /* 为系统导航栏留出空间 */\n}\n\n/* 区块样式 */\n.section {\n  background: #ffffff;\n  border-radius: 16rpx;\n  padding: 30rpx;\n  margin-bottom: 20rpx;\n  box-shadow: 0 2rpx 12rpx rgba(0, 0, 0, 0.05);\n}\n\n.section-title {\n  display: block;\n  font-size: 28rpx;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 20rpx;\n}\n\n/* 头像设置 */\n.avatar-section {\n  display: flex;\n  flex-direction: column;\n  gap: 30rpx;\n}\n\n.current-avatar {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 16rpx;\n}\n\n.avatar {\n  width: 120rpx;\n  height: 120rpx;\n  border-radius: 60rpx;\n  border: 4rpx solid #e5e5e5;\n}\n\n.avatar-label {\n  font-size: 24rpx;\n  color: #999;\n}\n\n.avatar-options {\n  display: flex;\n  flex-direction: column;\n  gap: 16rpx;\n}\n\n.avatar-btn {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12rpx;\n  padding: 20rpx;\n  background: #f8f8f8;\n  border-radius: 12rpx;\n  border: none;\n  font-size: 28rpx;\n  color: #333;\n}\n\n.avatar-btn:active {\n  background: #f0f0f0;\n}\n\n.btn-icon {\n  font-size: 32rpx;\n}\n\n.btn-text {\n  font-size: 28rpx;\n}\n\n/* 昵称设置 */\n.nickname-option {\n  display: flex;\n  align-items: center;\n  padding: 20rpx;\n  background: #f8f8f8;\n  border-radius: 12rpx;\n  margin-bottom: 16rpx;\n}\n\n.checkbox {\n  width: 28rpx;\n  height: 28rpx;\n  border: 2rpx solid #d0d0d0;\n  border-radius: 6rpx;\n  margin-right: 12rpx;\n  position: relative;\n}\n\n.checkbox.checked {\n  background: #ff8fb3;\n  border-color: #ff8fb3;\n}\n\n.checkbox.checked::after {\n  content: '';\n  position: absolute;\n  width: 12rpx;\n  height: 20rpx;\n  border: solid #fff;\n  border-width: 0 2rpx 2rpx 0;\n  transform: rotate(45deg);\n  top: 50%;\n  left: 50%;\n  margin-top: -10rpx;\n  margin-left: -8rpx;\n}\n\n.option-text {\n  flex: 1;\n  font-size: 28rpx;\n  color: #333;\n  font-weight: 500;\n}\n\n.current-nickname {\n  font-size: 24rpx;\n  color: #999;\n}\n\n.custom-nickname {\n  background: #f8f8f8;\n  border-radius: 12rpx;\n  padding: 20rpx;\n}\n\n.nickname-input {\n  width: 100%;\n  padding: 16rpx;\n  border: 1rpx solid #e5e5e5;\n  border-radius: 8rpx;\n  font-size: 28rpx;\n  background: #ffffff;\n  margin-bottom: 8rpx;\n}\n\n.char-count {\n  display: block;\n  font-size: 22rpx;\n  color: #999;\n  text-align: right;\n}\n\n/* 保存按钮 */\n.save-section {\n  margin-top: 40rpx;\n}\n\n.save-btn {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12rpx;\n  padding: 28rpx;\n  background: linear-gradient(135deg, #ff8fb3 0%, #ff7aa0 100%);\n  border-radius: 48rpx;\n  border: none;\n  color: #ffffff;\n  font-size: 30rpx;\n  font-weight: 600;\n  box-shadow: 0 8rpx 20rpx rgba(255, 143, 179, 0.35);\n}\n\n.save-btn:active {\n  opacity: 0.85;\n}\n\n.save-icon {\n  font-size: 32rpx;\n}\n\n.save-text {\n  font-size: 30rpx;\n}\n</style>","import MiniProgramPage from 'C:/Users/Administrator/Desktop/项目/love_time_fu/pages/profile/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","http","config"],"mappings":"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"}