{"version":3,"file":"history.js","sources":["pages/qna/history.vue","D:/softcaree/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvcW5hL2hpc3RvcnkudnVl"],"sourcesContent":["<template>\n  <view class=\"history-page\">\n    <!-- È°∂ÈÉ®Ê†èÔºàÁ≥ªÁªüÈ£éÊ†ºÁÆÄÊ¥ÅÔºâ -->\n\n    <!-- ÂàÜÈöî‰∏éÂæΩÊ†á -->\n    <view class=\"divider-row\">\n      <view class=\"divider\"></view>\n      <text class=\"heart\">üíö</text>\n      <view class=\"divider\"></view>\n    </view>\n\n    <!-- ÂéÜÂè≤ÂàóË°® -->\n    <view class=\"list\">\n      <view v-for=\"(item, i) in history\" :key=\"i\" class=\"list-item\" @click=\"openItem(item)\">\n        <view class=\"left\">\n          <text class=\"index\">{{ pad2(i + 1) }}</text>\n        </view>\n        <view class=\"center\">\n          <text class=\"question\">{{ item.question }}</text>\n        </view>\n        <view class=\"right\">\n          <view class=\"status\" :class=\"item.myAnswer ? 'done' : 'todo'\"></view>\n        </view>\n      </view>\n      <view v-if=\"history.length === 0\" class=\"empty\">\n        <text class=\"empty-text\">ÊöÇÊó†ÂéÜÂè≤ËÆ∞ÂΩï</text>\n      </view>\n    </view>\n  </view>\n</template>\n\n<script>\nimport { getHistory } from '@/api/qna.js';\nimport { getQuestions } from '@/api/qna.js';\n\nexport default {\n  data() {\n    return { \n      history: [],\n      defaultQuestions: [],\n      customQuestions: []\n    };\n  },\n  async onLoad() {\n    // Ê£ÄÊü•ÁôªÂΩïÁä∂ÊÄÅ\n    const loginInfo = uni.getStorageSync('login_info');\n    if (!loginInfo || !loginInfo.token) {\n      uni.showModal({\n        title: 'ÈúÄË¶ÅÁôªÂΩï',\n        content: 'ËØ∑ÂÖàÁôªÂΩï',\n        showCancel: false,\n        success: () => {\n          uni.reLaunch({ url: '/pages/login/index' });\n        }\n      });\n      return;\n    }\n    \n    // ÂÖàÂä†ËΩΩÈóÆÈ¢òÂàóË°®ÔºåÂÜçÂä†ËΩΩÂéÜÂè≤ËÆ∞ÂΩï\n    await this.loadQuestions();\n    await this.loadHistory();\n  },\n  methods: {\n    // ‰ªéÂêéÁ´ØÂä†ËΩΩÈóÆÈ¢òÂàóË°®\n    async loadQuestions() {\n      try {\n        const res = await getQuestions();\n        if (res && res.success && Array.isArray(res.questions)) {\n          const presetQuestions = [];\n          const customQuestions = [];\n          \n          res.questions.forEach(q => {\n            if (!q || q.id === undefined || q.id === null) return;\n            \n            const question = {\n              id: q.id,\n              text: q.questionText || q.text || '',\n              category: q.category || 'preset',\n              ...q\n            };\n            \n            if (q.category === 'preset') {\n              presetQuestions.push(question);\n            } else if (q.category === 'custom') {\n              customQuestions.push(question);\n            }\n          });\n          \n          this.defaultQuestions = presetQuestions;\n          this.customQuestions = customQuestions;\n        }\n      } catch (e) {\n        console.error('Âä†ËΩΩÈóÆÈ¢òÂàóË°®Â§±Ë¥•', e);\n      }\n    },\n    // ‰ªéÂêéÁ´ØÂä†ËΩΩÂéÜÂè≤ËÆ∞ÂΩï\n    async loadHistory() {\n      try {\n        uni.showLoading({ title: 'Âä†ËΩΩ‰∏≠...' });\n        const res = await getHistory({ page: 1, pageSize: 100 });\n        console.log('üì• ÂéÜÂè≤ËÆ∞ÂΩïÂìçÂ∫î:', res);\n        \n        let historyList = [];\n        \n        // Â§ÑÁêÜ‰∏çÂêåÁöÑÂìçÂ∫îÊ†ºÂºè\n        if (res && res.success && Array.isArray(res.history)) {\n          historyList = res.history;\n        } else if (res && res.success && Array.isArray(res.answers)) {\n          historyList = res.answers;\n        } else if (res && res.success && res.data && res.data.list) {\n          historyList = Array.isArray(res.data.list) ? res.data.list : [];\n        } else if (res && res.success && res.data && Array.isArray(res.data)) {\n          historyList = res.data;\n        } else if (res && res.list) {\n          historyList = Array.isArray(res.list) ? res.list : [];\n        } else if (Array.isArray(res)) {\n          historyList = res;\n        } else {\n          console.warn('‚ö†Ô∏è ÂéÜÂè≤ËÆ∞ÂΩïÂìçÂ∫îÊ†ºÂºè‰∏çÁ¨¶ÂêàÈ¢ÑÊúü:', res);\n          historyList = [];\n        }\n        \n        // Ê†áÂáÜÂåñÂéÜÂè≤ËÆ∞ÂΩïÊ†ºÂºèÔºåÁ°Æ‰øùÂ≠óÊÆµÂêç‰∏ÄËá¥\n        this.history = historyList.map(item => {\n          const id = item.id || item.answerId;\n          const questionId = item.questionId || item.question_id;\n          \n          // ‰ºòÂÖà‰ΩøÁî®ÂêéÁ´ØËøîÂõûÁöÑ questionÔºåÂ¶ÇÊûúÊ≤°ÊúâÂàô‰ªéÈóÆÈ¢òÂàóË°®‰∏≠Êü•Êâæ\n          let question = item.question || item.questionText || item.question_text;\n          if (!question && questionId != null) {\n            const allQuestions = [...(this.defaultQuestions || []), ...(this.customQuestions || [])];\n            const foundQuestion = allQuestions.find(q => q && q.id != null && Number(q.id) === Number(questionId));\n            if (foundQuestion && foundQuestion.text) {\n              question = foundQuestion.text;\n            }\n          }\n          \n          const myAnswer = item.myAnswer || item.answer || item.my_answer;\n          const partnerAnswer = item.partnerAnswer || item.partner_answer || '';\n          const time = item.time || item.answeredAt || item.createdAt || item.created_at || item.updatedAt || new Date().toLocaleString();\n          \n          return {\n            id,\n            questionId,\n            question: question || `ÈóÆÈ¢òID: ${questionId}`,\n            myAnswer,\n            partnerAnswer,\n            time,\n            questionCategory: item.questionCategory || item.category,\n            answeredAt: item.answeredAt,\n            ...item\n          };\n        });\n        \n        // ‰ªéÊñ∞Âà∞ÊóßÊéíÂ∫èÔºàÈ°∂ÈÉ®ÊúÄÊñ∞Ôºâ\n        this.history.sort((a, b) => {\n          const timeA = a.answeredAt || a.createdAt || a.time || '';\n          const timeB = b.answeredAt || b.createdAt || b.time || '';\n          return new Date(timeB) - new Date(timeA);\n        });\n        \n        console.log('‚úÖ ÂéÜÂè≤ËÆ∞ÂΩïÂä†ËΩΩÊàêÂäü:', {\n          count: this.history.length,\n          totalCount: res?.totalCount\n        });\n      } catch (e) {\n        console.error('Âä†ËΩΩÂéÜÂè≤ËÆ∞ÂΩïÂ§±Ë¥•', e);\n        \n        // 401ÈîôËØØÁâπÊÆäÂ§ÑÁêÜ\n        if (e.statusCode === 401) {\n          uni.showModal({\n            title: 'ÈúÄË¶ÅÁôªÂΩï',\n            content: 'ËØ∑ÂÖàÁôªÂΩï',\n            showCancel: false,\n            success: () => {\n              uni.reLaunch({ url: '/pages/login/index' });\n            }\n          });\n          return;\n        }\n        \n        // Â¶ÇÊûúÂêéÁ´ØËØ∑Ê±ÇÂ§±Ë¥•ÔºåÂ∞ùËØï‰ªéÊú¨Âú∞Â≠òÂÇ®Âä†ËΩΩ\n        try {\n          const data = uni.getStorageSync('qna_history');\n          this.history = Array.isArray(data) ? data : [];\n        } catch (e2) {\n          this.history = [];\n        }\n      } finally {\n        uni.hideLoading();\n      }\n    },\n    pad2(n) { return String(n).padStart(2, '0'); },\n    openItem(item) {\n      const qid = encodeURIComponent(item.questionId);\n      const time = encodeURIComponent(item.time || '');\n      uni.navigateTo({ url: `/pages/qna/index?qid=${qid}&time=${time}` });\n    }\n  }\n};\n</script>\n\n<style>\n.history-page { min-height: 100vh; background: #ffffff; }\n.topbar { position: relative; height: 96rpx; display: flex; align-items: center; justify-content: center; background: #ffffff; }\n.topbar-title { font-size: 32rpx; color: #2b2b2b; font-weight: 600; }\n.topbar-actions { position: absolute; right: 24rpx; top: 50%; transform: translateY(-50%); display: flex; gap: 12rpx; }\n.icon-btn { width: 64rpx; height: 64rpx; border-radius: 32rpx; background: #f7f7f7; color: #ff8fb3; font-size: 28rpx; display: flex; align-items: center; justify-content: center; }\n\n.divider-row { margin: 12rpx 24rpx; display: flex; align-items: center; gap: 16rpx; }\n.divider { flex: 1; height: 2rpx; background: #f5e6f0; }\n.heart { color: #ff8fb3; font-size: 26rpx; }\n\n.list { padding: 12rpx 24rpx; }\n.list-item { display: flex; align-items: center; padding: 18rpx 0; border-bottom: 1rpx solid #f5f5f5; }\n.list-item:last-child { border-bottom: none; }\n.left { width: 64rpx; }\n.index { font-size: 30rpx; color: #ff8fb3; font-weight: 700; }\n.center { flex: 1; }\n.question { font-size: 28rpx; color: #2b2b2b; }\n.right { width: 60rpx; display: flex; justify-content: flex-end; }\n.status { width: 32rpx; height: 32rpx; border-radius: 16rpx; border: 3rpx solid #ff8fb3; }\n.status.done { background: #ff8fb3; }\n.status.todo { background: #ffffff; }\n\n.empty { padding: 40rpx; display: flex; justify-content: center; }\n.empty-text { color: #9aa0a6; font-size: 26rpx; }\n</style>\n","import MiniProgramPage from 'C:/Users/Administrator/Desktop/È°πÁõÆ/love_time_fu/pages/qna/history.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","getQuestions","getHistory"],"mappings":"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"}