{"version":3,"file":"create.js","sources":["pages/heartwall/create.vue","D:/softcaree/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaGVhcnR3YWxsL2NyZWF0ZS52dWU"],"sourcesContent":["<template>\r\n  <view class=\"create-page\">\r\n    <!-- 自定义导航栏 -->\r\n    <view class=\"custom-nav\">\r\n      <view class=\"nav-left\" @click=\"goBack\">\r\n        <text class=\"back-icon\">‹</text>\r\n      </view>\r\n      <text class=\"nav-title\">爱心照片墙</text>\r\n      <view class=\"nav-right\">\r\n        <text class=\"menu-icon\">⋯</text>\r\n        <text class=\"scan-icon\">○</text>\r\n      </view>\r\n    </view>\r\n\r\n    <view class=\"center\">\r\n      <view id=\"heartArea\" class=\"heart-grid\">\r\n        <view v-for=\"(cell, idx) in heartMask\" :key=\"idx\" class=\"cell\" :class=\"{ hole: !cell, filled: cell && images[idx] }\" @tap=\"onPickSingle(idx)\">\r\n          <image v-if=\"images[idx]\" :src=\"images[idx]\" mode=\"aspectFill\" />\r\n        </view>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 照片数量提示 -->\r\n    <view class=\"photo-count\">\r\n      <text class=\"count-text\">已添加 {{ filledCount }}/{{ totalSlots }} 张照片</text>\r\n      <text v-if=\"filledCount > 0\" class=\"clear-btn\" @click=\"clearAllImages\">清空</text>\r\n    </view>\r\n\r\n    <view class=\"actions\">\r\n      <button class=\"btn yellow\" @click=\"onBatchUpload\">\r\n        批量上传照片 ({{ remainingSlots > 0 ? `还可添加${Math.min(9, remainingSlots)}张` : '已满' }})\r\n      </button>\r\n      <button class=\"btn green\" @click=\"onSaveProject\">保存项目</button>\r\n      <button class=\"btn pink\" @click=\"onSaveImage\">保存为图片</button>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 9x9 心形掩码（1 表示可填充，0 表示空位）；可按需调整\r\n      heartMask: [\r\n        0,1,1,0,0,1,1,0,0,\r\n        1,1,1,1,1,1,1,1,0,\r\n        1,1,1,1,1,1,1,1,0,\r\n        1,1,1,1,1,1,1,1,0,\r\n        0,1,1,1,1,1,1,0,0,\r\n        0,0,1,1,1,1,0,0,0,\r\n        0,0,0,1,1,0,0,0,0,\r\n        0,0,0,0,0,0,0,0,0,\r\n        0,0,0,0,0,0,0,0,0\r\n      ],\r\n      images: [],\r\n      editingIndex: null  // 正在编辑的项目索引，null 表示创建新项目\r\n    };\r\n  },\r\n  computed: {\r\n    // 总共可填充的位置数\r\n    totalSlots() {\r\n      return this.heartMask.filter(cell => cell === 1).length;\r\n    },\r\n    // 已填充的照片数\r\n    filledCount() {\r\n      let count = 0;\r\n      for (let i = 0; i < this.heartMask.length; i++) {\r\n        if (this.heartMask[i] && this.images[i]) {\r\n          count++;\r\n        }\r\n      }\r\n      return count;\r\n    },\r\n    // 剩余可添加的照片数\r\n    remainingSlots() {\r\n      return this.totalSlots - this.filledCount;\r\n    }\r\n  },\r\n  mounted() {\r\n    // 检查是否在编辑现有项目\r\n    try {\r\n      const editingIndex = uni.getStorageSync('heartwall_editing_index');\r\n      if (editingIndex !== null && editingIndex !== undefined && editingIndex !== '') {\r\n        this.editingIndex = Number(editingIndex);\r\n      }\r\n      \r\n      // 加载图片数据\r\n      const cached = uni.getStorageSync('heartwall_grid_images');\r\n      if (Array.isArray(cached)) {\r\n        this.images = cached;\r\n      }\r\n    } catch (e) {}\r\n  },\r\n  methods: {\r\n    goBack() {\r\n      uni.navigateBack();\r\n    },\r\n    async onBatchUpload() {\r\n      // 计算空位数量\r\n      const emptySlots = this.getEmptySlots();\r\n      if (emptySlots.length === 0) {\r\n        uni.showToast({ title: '照片墙已满', icon: 'none' });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        // uni-app 一次最多选择 9 张图片（微信小程序限制）\r\n        const maxCount = Math.min(9, emptySlots.length);\r\n        const res = await uni.chooseImage({ \r\n          count: maxCount, \r\n          sizeType: ['compressed'], \r\n          sourceType: ['album', 'camera'] \r\n        });\r\n        \r\n        if (!res || !res.tempFilePaths || res.tempFilePaths.length === 0) return;\r\n        \r\n        const files = res.tempFilePaths;\r\n        \r\n        // 按顺序填充空位\r\n        for (let i = 0; i < files.length && i < emptySlots.length; i++) {\r\n          const idx = emptySlots[i];\r\n          this.$set(this.images, idx, files[i]);\r\n        }\r\n        \r\n        this.persist();\r\n        \r\n        // 提示用户\r\n        const remainingSlots = emptySlots.length - files.length;\r\n        if (remainingSlots > 0) {\r\n          uni.showToast({ \r\n            title: `已添加${files.length}张，还可添加${remainingSlots}张`, \r\n            icon: 'none',\r\n            duration: 2000\r\n          });\r\n        } else {\r\n          uni.showToast({ \r\n            title: `已添加${files.length}张照片`, \r\n            icon: 'success' \r\n          });\r\n        }\r\n      } catch (e) {\r\n        console.error('批量上传失败:', e);\r\n      }\r\n    },\r\n    \r\n    // 获取所有空位的索引\r\n    getEmptySlots() {\r\n      const slots = [];\r\n      for (let i = 0; i < this.heartMask.length; i++) {\r\n        if (this.heartMask[i] && !this.images[i]) {\r\n          slots.push(i);\r\n        }\r\n      }\r\n      return slots;\r\n    },\r\n    \r\n    // 清空所有照片\r\n    clearAllImages() {\r\n      uni.showModal({\r\n        title: '确认清空',\r\n        content: '确定要清空所有照片吗？',\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            this.images = [];\r\n            this.persist();\r\n            uni.showToast({ title: '已清空', icon: 'success' });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    async onPickSingle(idx) {\r\n      if (!this.heartMask[idx]) return;\r\n      try {\r\n        const res = await uni.chooseImage({ count: 1 });\r\n        if (res && res.tempFilePaths && res.tempFilePaths[0]) {\r\n          this.$set(this.images, idx, res.tempFilePaths[0]);\r\n          this.persist();\r\n        }\r\n      } catch (e) {}\r\n    },\r\n    onInvite() {\r\n      uni.showToast({ title: '邀请功能待接入后端', icon: 'none' });\r\n    },\r\n    \r\n    // 保存项目到列表页\r\n    onSaveProject() {\r\n      if (this.filledCount === 0) {\r\n        uni.showToast({ title: '请至少添加一张照片', icon: 'none' });\r\n        return;\r\n      }\r\n\r\n      // 弹出输入框，让用户输入创建人名称\r\n      uni.showModal({\r\n        title: this.editingIndex !== null ? '保存修改' : '保存项目',\r\n        content: '请输入创建人名称',\r\n        editable: true,\r\n        placeholderText: '输入你的名字',\r\n        success: (res) => {\r\n          if (res.confirm) {\r\n            const creator = res.content || '匿名用户';\r\n            this.saveProjectData(creator);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    \r\n    // 保存项目数据\r\n    saveProjectData(creator) {\r\n      // 获取第一张照片作为封面\r\n      let cover = '';\r\n      for (let i = 0; i < this.heartMask.length; i++) {\r\n        if (this.heartMask[i] && this.images[i]) {\r\n          cover = this.images[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      // 构建项目数据\r\n      const projectData = {\r\n        cover: cover,\r\n        creator: creator,\r\n        progress: this.filledCount,\r\n        total: this.totalSlots,\r\n        createdAt: new Date().toLocaleDateString('zh-CN', {\r\n          year: 'numeric',\r\n          month: '2-digit',\r\n          day: '2-digit'\r\n        }).replace(/\\//g, '-'),\r\n        images: this.images,\r\n        heartMask: this.heartMask\r\n      };\r\n\r\n      // 加载现有项目列表\r\n      try {\r\n        const projects = uni.getStorageSync('heartwall_projects') || [];\r\n        const projectsList = Array.isArray(projects) ? projects : [];\r\n        \r\n        if (this.editingIndex !== null && this.editingIndex >= 0) {\r\n          // 编辑现有项目\r\n          projectsList[this.editingIndex] = projectData;\r\n        } else {\r\n          // 添加新项目\r\n          projectsList.unshift(projectData);  // 添加到列表首位\r\n        }\r\n        \r\n        // 保存到本地存储\r\n        uni.setStorageSync('heartwall_projects', projectsList);\r\n        \r\n        // 清除编辑状态和缓存\r\n        uni.removeStorageSync('heartwall_editing_index');\r\n        uni.removeStorageSync('heartwall_grid_images');\r\n        \r\n        uni.showToast({ \r\n          title: this.editingIndex !== null ? '修改成功' : '保存成功', \r\n          icon: 'success',\r\n          duration: 1500\r\n        });\r\n        \r\n        // 延迟跳转到列表页\r\n        setTimeout(() => {\r\n          uni.navigateBack();\r\n        }, 1500);\r\n      } catch (e) {\r\n        uni.showToast({ title: '保存失败，请重试', icon: 'none' });\r\n      }\r\n    },\r\n    async onSaveImage() {\r\n      // H5 环境下使用 html2canvas\r\n      // #ifdef H5\r\n      try {\r\n        const mod = await import('html2canvas');\r\n        const html2canvas = mod.default || mod;\r\n        const el = document.getElementById('heartArea');\r\n        const canvas = await html2canvas(el, { backgroundColor: null, scale: 2 });\r\n        const dataUrl = canvas.toDataURL('image/png');\r\n        const a = document.createElement('a');\r\n        a.href = dataUrl; a.download = 'heartwall.png'; a.click();\r\n        uni.showToast({ title: '已保存为图片', icon: 'none' });\r\n      } catch (e) {\r\n        uni.showToast({ title: '保存失败', icon: 'none' });\r\n      }\r\n      // #endif\r\n      // #ifndef H5\r\n      uni.showToast({ title: '请在 H5 端使用保存图片功能', icon: 'none' });\r\n      // #endif\r\n    },\r\n    persist() {\r\n      try { uni.setStorageSync('heartwall_grid_images', this.images); } catch (e) {}\r\n    },\r\n    \r\n    goBack() {\r\n      // 返回前清除编辑状态\r\n      uni.removeStorageSync('heartwall_editing_index');\r\n      uni.navigateBack();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.create-page { min-height: 100vh; background: #ffe4eb; display: flex; flex-direction: column; overflow: hidden; }\r\n\r\n/* 自定义导航栏 */\r\n.custom-nav {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 44px;\r\n  padding-top: env(safe-area-inset-top);\r\n  background: #f8f8f8;\r\n  border-bottom: 0.5px solid #d8d8d8;\r\n}\r\n.nav-left {\r\n  position: absolute;\r\n  left: 16px;\r\n  top: calc(env(safe-area-inset-top) + 50%);\r\n  transform: translateY(-50%);\r\n  width: 44px;\r\n  height: 44px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n}\r\n.back-icon {\r\n  font-size: 34px;\r\n  color: #000000;\r\n  font-weight: 400;\r\n  line-height: 1;\r\n}\r\n.nav-title {\r\n  font-size: 17px;\r\n  color: #000000;\r\n  font-weight: 600;\r\n  letter-spacing: 0.5px;\r\n}\r\n.nav-right {\r\n  position: absolute;\r\n  right: 16px;\r\n  top: calc(env(safe-area-inset-top) + 50%);\r\n  transform: translateY(-50%);\r\n  display: flex;\r\n  gap: 16px;\r\n  align-items: center;\r\n}\r\n.menu-icon {\r\n  font-size: 24px;\r\n  color: #000000;\r\n  line-height: 1;\r\n  font-weight: 600;\r\n}\r\n.scan-icon {\r\n  font-size: 24px;\r\n  color: #000000;\r\n  width: 24px;\r\n  height: 24px;\r\n  border: 2px solid #000000;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  line-height: 1;\r\n}\r\n\r\n.center { display: flex; align-items: flex-start; justify-content: center; padding: 80rpx 0 0 0; }\r\n.heart-grid { width: 640rpx; margin: 0 auto; display: grid; grid-template-columns: repeat(9, 1fr); grid-gap: 10rpx; }\r\n.cell { position: relative; width: 1fr; padding-bottom: 100%; background: rgba(255,255,255,0.7); border-radius: 12rpx; overflow: hidden; }\r\n.cell.hole { background: transparent; }\r\n.cell image { position: absolute; inset: 0; width: 100%; height: 100%; }\r\n.cell.filled { background: #ffffff; }\r\n\r\n.photo-count { \r\n  margin-top: 32rpx; \r\n  padding: 0 60rpx; \r\n  display: flex; \r\n  justify-content: space-between; \r\n  align-items: center; \r\n}\r\n.count-text { \r\n  font-size: 26rpx; \r\n  color: #666; \r\n  font-weight: 500; \r\n}\r\n.clear-btn { \r\n  font-size: 24rpx; \r\n  color: #ff507f; \r\n  padding: 8rpx 20rpx; \r\n  background: rgba(255, 80, 127, 0.1); \r\n  border-radius: 20rpx; \r\n}\r\n\r\n.actions { margin-top: 24rpx; padding-bottom: 24rpx; display: flex; flex-direction: column; align-items: center; gap: 16rpx; }\r\n.btn { width: 70%; border-radius: 999rpx; padding: 18rpx 0; font-size: 26rpx; box-shadow: 0 8rpx 20rpx rgba(0,0,0,0.12); }\r\n.btn.yellow { background: linear-gradient(90deg, #ffd36b, #ffb300); color: #333; }\r\n.btn.green { background: linear-gradient(90deg, #2bad81, #1a9966); color: #ffffff; }\r\n.btn.pink { background: linear-gradient(90deg, #ff8fb3, #ff507f); color: #ffffff; }\r\n</style>\r\n","import MiniProgramPage from 'C:/Users/Administrator/Desktop/love_time/pages/heartwall/create.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":"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"}