{"version":3,"file":"index.js","sources":["pages/hundred/index.vue","D:/softcaree/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvaHVuZHJlZC9pbmRleC52dWU"],"sourcesContent":["<template>\r\n  <view class=\"hundred-page\">\r\n    <!-- 背景图与标题牌 -->\r\n    <image class=\"bg\" src=\"/static/hundred/bg.jpg\" mode=\"aspectFill\" />\r\n    <view class=\"title-tag\">我们的 100 件小事</view>\r\n\r\n    <!-- 卡片瀑布布局 -->\r\n    <view class=\"cards\">\r\n      <view v-for=\"(item, i) in items\" :key=\"item.id\" class=\"card\" :class=\"{ done: item.done }\" @click=\"toggleDone(item)\" @longpress=\"confirmDelete(item)\">\r\n        <view class=\"stamp\" :class=\"item.done ? 'stamp-done' : 'stamp-todo'\">{{ item.done ? '已完成' : '待完成' }}</view>\r\n        <view class=\"delete-btn\" @click.stop=\"confirmDelete(item)\">×</view>\r\n        <image v-if=\"item.icon\" class=\"card-icon\" :src=\"item.icon\" mode=\"aspectFit\" />\r\n        <text class=\"card-text\">{{ item.text }}</text>\r\n      </view>\r\n      <view v-if=\"items.length === 0\" class=\"empty\">暂无小事，点击右下角添加吧～</view>\r\n    </view>\r\n\r\n    <!-- 右下悬浮按钮：目录 & 添加 -->\r\n    <view class=\"fab-group\">\r\n      <button class=\"fab menu\" @click=\"openCatalog\">≡ 目录</button>\r\n      <button class=\"fab add\" @click=\"openAdd\">＋ 添加小事</button>\r\n    </view>\r\n\r\n    <!-- 目录弹窗：按完成状态分组 -->\r\n    <view v-if=\"showCatalog\" class=\"modal-mask\" @click=\"closeCatalog\">\r\n      <view class=\"modal\" @click.stop>\r\n        <text class=\"modal-title\">目录</text>\r\n        <scroll-view scroll-y class=\"catalog\">\r\n          <text class=\"section\">已完成</text>\r\n          <view v-for=\"it in items.filter(x=>x.done)\" :key=\"it.id\" class=\"catalog-item\">• {{ it.text }}</view>\r\n          <text class=\"section\">待完成</text>\r\n          <view v-for=\"it in items.filter(x=>!x.done)\" :key=\"it.id\" class=\"catalog-item\">• {{ it.text }}</view>\r\n        </scroll-view>\r\n        <view class=\"modal-actions\">\r\n          <button class=\"btn\" @click=\"closeCatalog\">关闭</button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n\r\n    <!-- 添加弹窗 -->\r\n    <view v-if=\"showAdd\" class=\"modal-mask\" @click=\"closeAdd\">\r\n      <view class=\"modal\" @click.stop>\r\n        <text class=\"modal-title\">添加小事</text>\r\n        <view class=\"form\">\r\n          <input class=\"input\" v-model=\"form.text\" placeholder=\"例如：一起戴头饰过圣诞\" />\r\n        </view>\r\n        <view class=\"modal-actions\">\r\n          <button class=\"btn secondary\" @click=\"closeAdd\">取消</button>\r\n          <button class=\"btn primary\" @click=\"saveItem\">保存</button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      items: [],\r\n      showCatalog: false,\r\n      showAdd: false,\r\n      form: { text: '' }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.loadItems();\r\n    if (this.items.length === 0) {\r\n      // 预置示例\r\n      this.items = [\r\n        { id: 1, text: '用对方照片做壁纸', icon: '/static/hundred/wallpaper.png', done: false },\r\n        { id: 2, text: '给对方点下午茶', icon: '/static/hundred/tea.png', done: true },\r\n        { id: 3, text: '互相发动态宣言', icon: '/static/hundred/post.png', done: false },\r\n        { id: 4, text: '视频时截屏记录', icon: '/static/hundred/screenshot.png', done: true },\r\n        { id: 5, text: '一起戴头饰过圣诞', icon: '/static/hundred/christmas.png', done: false }\r\n      ];\r\n      this.saveItems();\r\n    }\r\n  },\r\n  methods: {\r\n    loadItems() {\r\n      try {\r\n        const data = uni.getStorageSync('hundred_items');\r\n        this.items = Array.isArray(data) ? data : [];\r\n      } catch (e) { this.items = []; }\r\n    },\r\n    saveItems() {\r\n      try { uni.setStorageSync('hundred_items', this.items); } catch (e) {}\r\n    },\r\n    confirmDelete(item) {\r\n      uni.showModal({\r\n        title: '删除确认',\r\n        content: `确定删除“${item.text}”吗？`,\r\n        confirmText: '删除',\r\n        cancelText: '取消',\r\n        success: (res) => { if (res.confirm) this.deleteItem(item); }\r\n      });\r\n    },\r\n    deleteItem(item) {\r\n      this.items = this.items.filter(it => it.id !== item.id);\r\n      this.saveItems();\r\n      uni.showToast({ title: '已删除', icon: 'none' });\r\n    },\r\n    toggleDone(item) {\r\n      item.done = !item.done;\r\n      this.saveItems();\r\n    },\r\n    openCatalog() { this.showCatalog = true; },\r\n    closeCatalog() { this.showCatalog = false; },\r\n    openAdd() { this.showAdd = true; },\r\n    closeAdd() { this.showAdd = false; this.form.text = ''; },\r\n    saveItem() {\r\n      if (!this.form.text) { uni.showToast({ title: '请输入内容', icon: 'none' }); return; }\r\n      const id = (this.items.reduce((m, it)=>Math.max(m, it.id||0), 0) + 1);\r\n      this.items.unshift({ id, text: this.form.text, icon: '', done: false });\r\n      this.saveItems();\r\n      this.closeAdd();\r\n      uni.showToast({ title: '已添加', icon: 'none' });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.hundred-page { min-height: 100vh; position: relative; background: #f0f0f0; }\r\n.bg { position: absolute; inset: 0; width: 100%; height: 100%; object-fit: cover; opacity: 0.95; }\r\n.title-tag { position: absolute; left: 50%; top: 80rpx; transform: translateX(-50%); background: #ffffff; color: #4e3c3c; padding: 16rpx 28rpx; border-radius: 16rpx; font-size: 30rpx; font-weight: 700; box-shadow: 0 6rpx 16rpx rgba(0,0,0,0.06); border: 1rpx solid #e5e5e5; }\r\n\r\n.cards { position: relative; padding: 220rpx 24rpx 120rpx 24rpx; display: grid; grid-template-columns: repeat(2, 1fr); gap: 20rpx; }\r\n.card { position: relative; background: #f7f7f7; border-radius: 30rpx; padding: 24rpx; box-shadow: 0 8rpx 20rpx rgba(0,0,0,0.06); border: 1rpx solid #e5e5e5; }\r\n.delete-btn { position: absolute; right: 12rpx; top: 10rpx; width: 40rpx; height: 40rpx; border-radius: 20rpx; background: rgba(0,0,0,0.06); color: #666; display: flex; align-items: center; justify-content: center; font-size: 28rpx; }\r\n.delete-btn:active { transform: scale(0.95); }\r\n.card.done { opacity: 0.95; }\r\n.card-icon { width: 88rpx; height: 88rpx; }\r\n.card-text { margin-top: 8rpx; font-size: 28rpx; color: #5a4a4a; }\r\n.stamp { position: absolute; left: -6rpx; top: -10rpx; padding: 10rpx 16rpx; border-radius: 8rpx; font-size: 22rpx; font-weight: 700; }\r\n.stamp-todo { background: #f8f9fa; color: #666; border: 1rpx solid #e5e5e5; }\r\n.stamp-done { background: #e9f6f0; color: #2bad81; border: 1rpx solid #cbe9dc; }\r\n.empty { grid-column: 1 / -1; text-align: center; color: #7a7a7a; padding: 40rpx; }\r\n\r\n.fab-group { position: fixed; right: 24rpx; bottom: 60rpx; display: flex; flex-direction: column; gap: 12rpx; z-index: 99; }\r\n.fab { border-radius: 999rpx; padding: 16rpx 24rpx; font-size: 24rpx; box-shadow: 0 6rpx 16rpx rgba(0,0,0,0.08); }\r\n.fab.menu { background: #ffffff; color: #333; border: 1rpx solid #e5e5e5; }\r\n.fab.add { background: #2bad81; color: #ffffff; }\r\n\r\n.modal-mask { position: fixed; inset: 0; background: rgba(0,0,0,0.35); display: flex; align-items: center; justify-content: center; z-index: 100; }\r\n.modal { width: 86%; background: #ffffff; border-radius: 24rpx; padding: 24rpx; box-shadow: 0 6rpx 16rpx rgba(0,0,0,0.06); border: 1rpx solid #e5e5e5; }\r\n.modal-title { font-size: 30rpx; font-weight: 700; color: #2b2b2b; }\r\n.catalog { max-height: 520rpx; margin-top: 10rpx; }\r\n.section { display: block; margin: 10rpx 0; font-size: 26rpx; color: #7a3b52; }\r\n.catalog-item { font-size: 24rpx; color: #5a4a4a; padding: 6rpx 0; }\r\n.form { margin-top: 12rpx; }\r\n.input { border: 1rpx solid #e5e5e5; border-radius: 14rpx; padding: 14rpx; font-size: 26rpx; background: #ffffff; }\r\n.modal-actions { margin-top: 14rpx; display: flex; justify-content: flex-end; gap: 10rpx; }\r\n.btn { padding: 14rpx 20rpx; border-radius: 14rpx; font-size: 26rpx; }\r\n.btn.primary { background: #2bad81; color: #fff; }\r\n.btn.secondary { background: #f0f0f0; color: #333; }\r\n</style>","import MiniProgramPage from 'C:/Users/Administrator/Desktop/love_time/pages/hundred/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni"],"mappings":";;;AAwDA,MAAK,YAAU;AAAA,EACb,OAAO;AACL,WAAO;AAAA,MACL,OAAO,CAAE;AAAA,MACT,aAAa;AAAA,MACb,SAAS;AAAA,MACT,MAAM,EAAE,MAAM,GAAG;AAAA;EAEpB;AAAA,EACD,UAAU;AACR,SAAK,UAAS;AACd,QAAI,KAAK,MAAM,WAAW,GAAG;AAE3B,WAAK,QAAQ;AAAA,QACX,EAAE,IAAI,GAAG,MAAM,YAAY,MAAM,iCAAiC,MAAM,MAAO;AAAA,QAC/E,EAAE,IAAI,GAAG,MAAM,WAAW,MAAM,2BAA2B,MAAM,KAAM;AAAA,QACvE,EAAE,IAAI,GAAG,MAAM,WAAW,MAAM,4BAA4B,MAAM,MAAO;AAAA,QACzE,EAAE,IAAI,GAAG,MAAM,WAAW,MAAM,kCAAkC,MAAM,KAAM;AAAA,QAC9E,EAAE,IAAI,GAAG,MAAM,YAAY,MAAM,iCAAiC,MAAM,MAAM;AAAA;AAEhF,WAAK,UAAS;AAAA,IAChB;AAAA,EACD;AAAA,EACD,SAAS;AAAA,IACP,YAAY;AACV,UAAI;AACF,cAAM,OAAOA,cAAAA,MAAI,eAAe,eAAe;AAC/C,aAAK,QAAQ,MAAM,QAAQ,IAAI,IAAI,OAAO;MAC1C,SAAO,GAAG;AAAE,aAAK,QAAQ,CAAE;AAAA,MAAE;AAAA,IAChC;AAAA,IACD,YAAY;AACV,UAAI;AAAEA,sBAAAA,MAAI,eAAe,iBAAiB,KAAK,KAAK;AAAA,MAAG,SAAS,GAAG;AAAA,MAAC;AAAA,IACrE;AAAA,IACD,cAAc,MAAM;AAClBA,oBAAAA,MAAI,UAAU;AAAA,QACZ,OAAO;AAAA,QACP,SAAS,QAAQ,KAAK,IAAI;AAAA,QAC1B,aAAa;AAAA,QACb,YAAY;AAAA,QACZ,SAAS,CAAC,QAAQ;AAAE,cAAI,IAAI;AAAS,iBAAK,WAAW,IAAI;AAAA,QAAG;AAAA,MAC9D,CAAC;AAAA,IACF;AAAA,IACD,WAAW,MAAM;AACf,WAAK,QAAQ,KAAK,MAAM,OAAO,QAAM,GAAG,OAAO,KAAK,EAAE;AACtD,WAAK,UAAS;AACdA,oBAAG,MAAC,UAAU,EAAE,OAAO,OAAO,MAAM,OAAK,CAAG;AAAA,IAC7C;AAAA,IACD,WAAW,MAAM;AACf,WAAK,OAAO,CAAC,KAAK;AAClB,WAAK,UAAS;AAAA,IACf;AAAA,IACD,cAAc;AAAE,WAAK,cAAc;AAAA,IAAO;AAAA,IAC1C,eAAe;AAAE,WAAK,cAAc;AAAA,IAAQ;AAAA,IAC5C,UAAU;AAAE,WAAK,UAAU;AAAA,IAAO;AAAA,IAClC,WAAW;AAAE,WAAK,UAAU;AAAO,WAAK,KAAK,OAAO;AAAA,IAAK;AAAA,IACzD,WAAW;AACT,UAAI,CAAC,KAAK,KAAK,MAAM;AAAEA,sBAAG,MAAC,UAAU,EAAE,OAAO,SAAS,MAAM,QAAQ;AAAG;AAAA,MAAQ;AAChF,YAAM,KAAM,KAAK,MAAM,OAAO,CAAC,GAAG,OAAK,KAAK,IAAI,GAAG,GAAG,MAAI,CAAC,GAAG,CAAC,IAAI;AACnE,WAAK,MAAM,QAAQ,EAAE,IAAI,MAAM,KAAK,KAAK,MAAM,MAAM,IAAI,MAAM,MAAO,CAAA;AACtE,WAAK,UAAS;AACd,WAAK,SAAQ;AACbA,oBAAG,MAAC,UAAU,EAAE,OAAO,OAAO,MAAM,OAAK,CAAG;AAAA,IAC9C;AAAA,EACF;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvHA,GAAG,WAAW,eAAe;"}