{"version":3,"file":"index.js","sources":["pages/login/index.vue","D:/softcaree/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbG9naW4vaW5kZXgudnVl"],"sourcesContent":["<template>\n  <view class=\"login-page\">\n    <!-- 背景图片 -->\n    <image class=\"bg-image\" src=\"/static/login/beijing.jpg\" mode=\"aspectFill\" />\n    \n    <!-- 背景蒙版（增加可读性） -->\n    <view class=\"bg-overlay\"></view>\n\n    <!-- 内容层 -->\n    <view class=\"content-wrapper\">\n\n    <!-- Logo 和标题 -->\n    <view class=\"logo-section\">\n      <image class=\"logo\" src=\"/static/zhuye/yellow_love.png\" mode=\"aspectFit\" />\n      <text class=\"app-name\">甜蜜时光</text>\n      <text class=\"app-slogan\">记录每一个爱的瞬间</text>\n    </view>\n\n    <!-- 登录区域（无卡片） -->\n    <view class=\"login-area\">\n      <!-- 用户信息预览（授权后显示） -->\n      <view v-if=\"userInfo.nickName\" class=\"user-preview\">\n        <image class=\"avatar\" :src=\"userInfo.avatarUrl\" mode=\"aspectFill\" />\n        <text class=\"nickname\">{{ userInfo.nickName }}</text>\n      </view>\n\n      <!-- 登录按钮 -->\n      <button \n        v-if=\"!isLoggedIn\" \n        class=\"login-btn\" \n        @click=\"handleWxLogin\"\n        :loading=\"isLoading\"\n      >\n        <text class=\"btn-icon\">📱</text>\n        <text class=\"btn-text\">微信授权登录</text>\n      </button>\n\n      <!-- 游客登录按钮 -->\n      <button \n        v-if=\"!isLoggedIn\" \n        class=\"guest-btn\" \n        @click=\"handleGuestLogin\"\n      >\n        <text class=\"btn-icon\">👤</text>\n        <text class=\"btn-text\">游客登录</text>\n      </button>\n\n\n\n\n      <!-- 提示信息 -->\n      <view class=\"tips\">\n        <text class=\"tip-text\">登录即表示同意</text>\n        <text class=\"link-text\">《用户协议》</text>\n        <text class=\"tip-text\">和</text>\n        <text class=\"link-text\">《隐私政策》</text>\n      </view>\n    </view>\n    </view>\n  </view>\n</template>\n\n<script>\nimport http from '@/utils/http.js';\nimport config from '@/utils/config.js';\n\nexport default {\n  data() {\n    return {\n      isLoggedIn: false,\n      isLoading: false,\n      userInfo: {\n        nickName: '',\n        avatarUrl: ''\n      }\n    };\n  },\n  onLoad() {\n    // 检查是否已登录\n    this.checkLoginStatus();\n  },\n  methods: {\n    // 检查登录状态\n    checkLoginStatus() {\n      try {\n        const loginInfo = uni.getStorageSync('login_info');\n        if (loginInfo && loginInfo.isLoggedIn) {\n          console.log('检测到已登录，自动跳转到首页');\n          this.isLoggedIn = true;\n          this.userInfo = loginInfo.userInfo || {};\n          // ✅ 立即跳转到首页，不显示登录页面\n          setTimeout(() => {\n            uni.reLaunch({\n              url: '/pages/index/index'\n            });\n          }, 300);\n        }\n      } catch (e) {\n        console.error('检查登录状态失败', e);\n      }\n    },\n\n    /**\n     * 游客登录处理\n     * 无需授权，直接使用默认用户信息进入应用\n     */\n    handleGuestLogin() {\n      // 创建游客用户信息\n      const guestUserInfo = {\n        nickName: '游客用户',\n        avatarUrl: '/static/zhuye/smile.png',\n        displayName: '游客用户',\n        displayAvatar: '/static/zhuye/smile.png',\n        isGuest: true\n      };\n\n      // 保存游客登录信息\n      const loginInfo = {\n        isLoggedIn: true,\n        userInfo: guestUserInfo,\n        isGuest: true, // 标记为游客登录\n        loginTime: new Date().toISOString()\n      };\n      \n      try {\n        uni.setStorageSync('login_info', loginInfo);\n        \n        // 提示登录成功\n        uni.showToast({\n          title: '游客登录成功',\n          icon: 'success',\n          duration: 1500\n        });\n\n        // 延迟跳转到首页\n        setTimeout(() => {\n          this.enterApp();\n        }, 1500);\n        \n      } catch (error) {\n        console.error('游客登录失败', error);\n        uni.showToast({\n          title: '登录失败，请重试',\n          icon: 'none'\n        });\n      }\n    },\n\n    /**\n     * 微信授权登录主流程\n     * 流程说明：\n     * 1. 调用 uni.getUserProfile 获取用户信息（昵称、头像）- 必须由用户点击直接触发\n     * 2. 调用 wx.login 获取临时登录凭证 code\n     * 3. 尝试调用后端登录API，如果失败则使用模拟登录\n     * 4. 前端保存登录状态和用户信息\n     * 5. 直接跳转到首页\n     */\n    async handleWxLogin() {\n      this.isLoading = true;\n      try {\n        // 1. 获取微信用户基础资料\n        const userProfile = await uni.getUserProfile({\n          desc: '用于完善用户资料'\n        });\n        \n        // 2. 获取微信登录code\n        const code = await this.getWxLoginCode();\n\n        // 3. 尝试调用后端登录API，如果失败则使用模拟登录\n        let loginResult;\n        try {\n          loginResult = await http.post(config.API.LOGIN.WECHAT, {\n            code,\n            nickName: userProfile.userInfo.nickName,\n            avatarUrl: userProfile.userInfo.avatarUrl\n          });\n        } catch (apiError) {\n          console.warn('后端API调用失败，使用模拟登录', apiError);\n          // 使用模拟登录数据\n          loginResult = {\n            token: 'mock_token_' + Date.now(),\n            openid: 'mock_openid_' + Date.now(),\n            session_key: 'mock_session_' + Date.now(),\n            success: true\n          };\n          \n          // 提示用户使用模拟登录\n          uni.showToast({\n            title: '后端服务未就绪，使用模拟登录',\n            icon: 'none',\n            duration: 2000\n          });\n        }\n\n        // 4. 保存登录信息到本地\n        // 处理后端响应格式：可能是 {success: true, data: {token: ...}} 或 {token: ...}\n        const responseData = loginResult.data || loginResult;\n        const token = responseData.token || loginResult.token || '';\n        const openid = responseData.openid || loginResult.openid || '';\n        const sessionKey = responseData.session_key || loginResult.session_key || '';\n        const isSuccess = loginResult.success !== false; // 如果没有success字段，默认为成功\n        \n        const loginInfo = {\n          isLoggedIn: true,\n          token: token,\n          openid: openid,\n          sessionKey: sessionKey,\n          userInfo: {\n            nickName: userProfile.userInfo.nickName,\n            avatarUrl: userProfile.userInfo.avatarUrl,\n            displayName: userProfile.userInfo.nickName,\n            displayAvatar: userProfile.userInfo.avatarUrl\n          },\n          loginTime: new Date().toISOString(),\n          isMock: !isSuccess // 标记是否为模拟登录\n        };\n        \n        // 调试信息：检查token是否正确提取\n        if (process.env.NODE_ENV === 'development') {\n          console.log('登录响应数据:', loginResult);\n          console.log('提取的Token:', token ? `已找到，长度: ${token.length}` : '未找到');\n          if (!token) {\n            console.error('❌ Token提取失败！响应结构:', JSON.stringify(loginResult, null, 2));\n          }\n        }\n        \n        uni.setStorageSync('login_info', loginInfo);\n        this.userInfo = loginInfo.userInfo;\n        this.isLoggedIn = true;\n        \n        // 验证token是否保存成功\n        const savedLoginInfo = uni.getStorageSync('login_info');\n        if (process.env.NODE_ENV === 'development') {\n          console.log('保存后的登录信息:', savedLoginInfo);\n          console.log('保存后的Token:', savedLoginInfo?.token ? `✅ 已保存，长度: ${savedLoginInfo.token.length}` : '❌ 未保存');\n        }\n        \n        // 如果token为空，给出警告\n        if (!token || !token.trim()) {\n          console.error('⚠️ 警告：Token为空，登录可能失败！');\n          uni.showModal({\n            title: '登录警告',\n            content: '未获取到有效的登录凭证，部分功能可能无法使用。请检查后端服务是否正常。',\n            showCancel: false\n          });\n        }\n\n        // 5. 提示登录成功\n        uni.showToast({\n          title: '登录成功',\n          icon: 'success',\n          duration: 1500\n        });\n\n        // 6. 延迟跳转到首页（头像修改功能将在个人资料页面提供）\n        setTimeout(() => {\n          this.enterApp();\n        }, 1500);\n        \n      } catch (e) {\n        console.error('微信登录失败', e);\n        uni.showToast({\n          title: e.errMsg || '登录失败，请重试',\n          icon: 'none'\n        });\n      } finally {\n        this.isLoading = false;\n      }\n    },\n\n\n\n    /**\n     * 调用微信 wx.login 接口获取临时登录凭证 code\n     * @returns {Promise<string>} 返回 code字符串\n     */\n    getWxLoginCode() {\n      return new Promise((resolve, reject) => {\n        // #ifdef MP-WEIXIN\n        uni.login({\n          provider: 'weixin',\n          success: (res) => {\n            if (res.code) {\n              resolve(res.code);\n            } else {\n              reject(new Error('获取code失败'));\n            }\n          },\n          fail: (err) => {\n            reject(err);\n          }\n        });\n        // #endif\n\n        // #ifndef MP-WEIXIN\n        // H5 或其他平台返回模拟 code\n        resolve('mock_code_' + Date.now());\n        // #endif\n      });\n    },\n\n    /**\n     * 获取用户信息（微信小程序）\n     * @returns {Promise<Object>} 返回用户信息对象\n     */\n    getUserProfile() {\n      return new Promise((resolve, reject) => {\n        // #ifdef MP-WEIXIN\n        uni.getUserProfile({\n          desc: '用于完善用户资料',\n          success: (res) => {\n            resolve(res.userInfo);\n          },\n          fail: (err) => {\n            reject(err);\n          }\n        });\n        // #endif\n\n        // #ifndef MP-WEIXIN\n        // H5 或其他平台使用模拟数据\n        resolve({\n          nickName: '游客用户',\n          avatarUrl: '/static/zhuye/smile.png'\n        });\n        // #endif\n      });\n    },\n\n    /**\n     * 将登录信息发送到后端服务器（使用封装好的API）\n     * @param {string} code - 微信登录凭证\n     * @param {Object} userInfo - 用户信息\n     * @returns {Promise<Object>} 返回后端响应数据\n     */\n    async sendLoginToBackend(code, userInfo) {\n      try {\n        // 调用封装好的登录API\n        const result = await wxLogin(code, userInfo);\n        return result;\n      } catch (error) {\n        // 直接抛出错误，不返回模拟数据\n        throw error;\n      }\n    },\n\n    // 进入应用\n    enterApp() {\n      uni.reLaunch({\n        url: '/pages/index/index'\n      });\n    },\n\n\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.login-page {\n  min-height: 100vh;\n  position: relative;\n  overflow: hidden;\n}\n\n/* 背景图片 */\n.bg-image {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 0;\n}\n\n/* 背景蒙版（让文字更清晰） */\n.bg-overlay {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(255, 255, 255, 0.15);\n  z-index: 1;\n}\n\n/* 内容层 */\n.content-wrapper {\n  position: relative;\n  z-index: 2;\n  min-height: 100vh;\n  padding: 40rpx;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n/* 移除旧的背景装饰 */\n.bg-decoration {\n  display: none;\n}\n\n.heart {\n  display: none;\n}\n\n/* Logo 区域 */\n.logo-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 80rpx;\n}\n\n.logo {\n  width: 180rpx;\n  height: 180rpx;\n  margin-bottom: 30rpx;\n  animation: pulse 2s ease-in-out infinite;\n}\n\n@keyframes pulse {\n  0%, 100% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.05);\n  }\n}\n\n.app-name {\n  font-size: 48rpx;\n  font-weight: 700;\n  color: #ff8fb3;\n  margin-bottom: 16rpx;\n}\n\n.app-slogan {\n  font-size: 26rpx;\n  color: #4e3c3c;\n}\n\n/* 登录区域（无卡片背景） */\n.login-area {\n  width: 70%;\n  max-width: 500rpx;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n/* 移除旧的登录卡片样式 */\n.login-card {\n  display: none;\n}\n\n/* 移除欢迎文字样式 */\n.welcome-text {\n  display: none;\n}\n\n.subtitle {\n  display: none;\n}\n\n/* 用户信息预览 */\n.user-preview {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 40rpx;\n}\n\n.avatar {\n  width: 120rpx;\n  height: 120rpx;\n  border-radius: 60rpx;\n  border: 4rpx solid #e5e5e5;\n  margin-bottom: 20rpx;\n}\n\n.nickname {\n  font-size: 28rpx;\n  color: #333;\n  font-weight: 600;\n}\n\n/* 登录按钮 */\n.login-btn, .enter-btn, .guest-btn {\n  width: 100%;\n  background: linear-gradient(135deg, #ff8fb3 0%, #ff7aa0 100%);\n  border-radius: 48rpx;\n  padding: 28rpx 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12rpx;\n  box-shadow: 0 8rpx 20rpx rgba(255, 143, 179, 0.35);\n  margin-bottom: 20rpx;\n  border: none;\n  color: #ffffff;\n}\n\n.login-btn::after, .enter-btn::after, .guest-btn::after {\n  border: none;\n}\n\n.login-btn:active, .enter-btn:active, .guest-btn:active {\n  opacity: 0.85;\n}\n\n.enter-btn {\n  background: linear-gradient(135deg, #ff8fb3 0%, #ff7aa0 100%);\n  box-shadow: 0 8rpx 20rpx rgba(255, 143, 179, 0.35);\n}\n\n/* 游客登录按钮样式 */\n.guest-btn {\n  background: #ff9800;\n  box-shadow: 0 8rpx 20rpx rgba(255, 152, 0, 0.25);\n}\n\n.btn-icon {\n  font-size: 32rpx;\n}\n\n.btn-text {\n  font-size: 30rpx;\n  font-weight: 600;\n  color: #ffffff;\n}\n\n/* 提示信息 */\n.tips {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 8rpx;\n  padding: 16rpx 32rpx;\n  background: rgba(255, 255, 255, 0.85);\n  border-radius: 20rpx;\n  backdrop-filter: blur(8px);\n}\n\n.tip-text {\n  font-size: 22rpx;\n  color: #666;\n}\n\n.link-text {\n  font-size: 22rpx;\n  color: #ff8fb3;\n}\n\n/* 资料确认伹媗 */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: flex-end;\n  z-index: 1000;\n}\n\n.modal-content {\n  width: 100%;\n  background: #ffffff;\n  border-radius: 32rpx 32rpx 0 0;\n  padding: 40rpx 30rpx 60rpx 30rpx;\n  box-shadow: 0 -8rpx 24rpx rgba(0, 0, 0, 0.1);\n  position: relative;\n  max-height: 80vh;\n  overflow-y: auto;\n}\n\n.modal-close {\n  position: absolute;\n  top: 20rpx;\n  right: 20rpx;\n  font-size: 32rpx;\n  color: #999;\n  padding: 8rpx 16rpx;\n  border-radius: 50%;\n}\n\n.modal-title {\n  display: block;\n  font-size: 32rpx;\n  font-weight: 700;\n  color: #333;\n  margin-bottom: 12rpx;\n  text-align: center;\n}\n\n.modal-subtitle {\n  display: block;\n  font-size: 24rpx;\n  color: #999;\n  text-align: center;\n  margin-bottom: 40rpx;\n}\n\n/* 头像选择区 */\n.avatar-section {\n  margin-bottom: 40rpx;\n}\n\n.section-label {\n  display: block;\n  font-size: 28rpx;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 20rpx;\n}\n\n.option-item {\n  display: flex;\n  align-items: center;\n  padding: 20rpx;\n  background: #f8f8f8;\n  border-radius: 16rpx;\n  margin-bottom: 16rpx;\n  border: 2rpx solid transparent;\n}\n\n.option-item:active {\n  background: #f0f0f0;\n}\n\n.option-avatar {\n  width: 80rpx;\n  height: 80rpx;\n  border-radius: 16rpx;\n  overflow: hidden;\n  margin-right: 20rpx;\n  flex-shrink: 0;\n}\n\n.option-avatar image {\n  width: 100%;\n  height: 100%;\n}\n\n.option-avatar.placeholder {\n  background: #e5e5e5;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40rpx;\n  color: #999;\n}\n\n.option-info {\n  flex: 1;\n}\n\n.option-title {\n  display: block;\n  font-size: 28rpx;\n  color: #333;\n  font-weight: 600;\n  margin-bottom: 8rpx;\n}\n\n.option-desc {\n  display: block;\n  font-size: 22rpx;\n  color: #999;\n}\n\n.option-radio {\n  width: 28rpx;\n  height: 28rpx;\n  border: 3rpx solid #d0d0d0;\n  border-radius: 50%;\n  margin-left: 20rpx;\n  flex-shrink: 0;\n  background: #fff;\n  position: relative;\n}\n\n.option-radio.active {\n  border-color: #ff8fb3;\n  background: #ff8fb3;\n}\n\n.option-radio.active::after {\n  content: '';\n  position: absolute;\n  width: 14rpx;\n  height: 24rpx;\n  border: solid #fff;\n  border-width: 0 3rpx 3rpx 0;\n  transform: rotate(45deg);\n  top: 50%;\n  left: 50%;\n  margin-top: -14rpx;\n  margin-left: -10rpx;\n}\n\n/* 昵称设置 */\n.nickname-section {\n  margin-bottom: 40rpx;\n}\n\n.checkbox-item {\n  display: flex;\n  align-items: center;\n  padding: 20rpx;\n  background: #f8f8f8;\n  border-radius: 16rpx;\n  margin-bottom: 16rpx;\n}\n\n.checkbox {\n  width: 28rpx;\n  height: 28rpx;\n  border: 2rpx solid #d0d0d0;\n  border-radius: 6rpx;\n  margin-right: 12rpx;\n  flex-shrink: 0;\n  position: relative;\n}\n\n.checkbox.checked {\n  background: #ff8fb3;\n  border-color: #ff8fb3;\n}\n\n.checkbox.checked::after {\n  content: '';\n  position: absolute;\n  width: 12rpx;\n  height: 20rpx;\n  border: solid #fff;\n  border-width: 0 2rpx 2rpx 0;\n  transform: rotate(45deg);\n  top: 50%;\n  left: 50%;\n  margin-top: -10rpx;\n  margin-left: -8rpx;\n}\n\n.checkbox-text {\n  flex: 1;\n  font-size: 28rpx;\n  color: #333;\n  font-weight: 500;\n}\n\n.nickname-display {\n  font-size: 24rpx;\n  color: #999;\n}\n\n.custom-nickname-box {\n  background: #f8f8f8;\n  border-radius: 16rpx;\n  padding: 20rpx;\n  margin-top: 16rpx;\n}\n\n.input-label {\n  display: block;\n  font-size: 24rpx;\n  color: #666;\n  margin-bottom: 12rpx;\n}\n\n.nickname-input {\n  width: 100%;\n  padding: 16rpx;\n  border: 1rpx solid #e5e5e5;\n  border-radius: 12rpx;\n  font-size: 26rpx;\n  background: #fff;\n  margin-bottom: 8rpx;\n}\n\n.char-count {\n  display: block;\n  font-size: 20rpx;\n  color: #999;\n  text-align: right;\n}\n\n/* 操作按钮 */\n.modal-actions {\n  display: flex;\n  gap: 16rpx;\n  margin-top: 40rpx;\n}\n\n.btn-cancel {\n  flex: 1;\n  padding: 16rpx;\n  background: #f0f0f0;\n  border-radius: 24rpx;\n  border: none;\n  font-size: 28rpx;\n  color: #666;\n  font-weight: 600;\n}\n\n.btn-cancel:active {\n  background: #e0e0e0;\n}\n\n.btn-confirm {\n  flex: 1;\n  padding: 16rpx;\n  background: linear-gradient(135deg, #ff8fb3 0%, #ff7aa0 100%);\n  border-radius: 24rpx;\n  border: none;\n  font-size: 28rpx;\n  color: #fff;\n  font-weight: 600;\n  box-shadow: 0 4rpx 12rpx rgba(255, 143, 179, 0.4);\n}\n\n.btn-confirm:active {\n  opacity: 0.9;\n}\n\n/* 底部 */\n.footer {\n  position: relative;\n  margin-top: 40rpx;\n  text-align: center;\n}\n\n.footer-text {\n  font-size: 24rpx;\n  color: #666;\n  text-shadow: 0 2rpx 4rpx rgba(255, 255, 255, 0.8);\n}\n\n/* 头像选择按钮样式 */\n.avatar-btn {\n  margin-top: 20rpx;\n  width: 80%;\n  height: 88rpx;\n  background: rgba(255, 255, 255, 0.9);\n  border-radius: 44rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 32rpx;\n  color: #333;\n  border: 2rpx solid #e5e5e5;\n  \n  &::after {\n    border: none;\n  }\n  \n  &:active {\n    background: rgba(255, 255, 255, 0.7);\n  }\n}\n</style>\n","import MiniProgramPage from 'C:/Users/Administrator/Desktop/项目/love_time_fu/pages/login/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","http","config"],"mappings":"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"}