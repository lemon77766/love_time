{"version":3,"file":"index.js","sources":["pages/login/index.vue","D:/softcaree/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvbG9naW4vaW5kZXgudnVl"],"sourcesContent":["<template>\r\n  <view class=\"login-page\">\r\n    <!-- 背景图片 -->\r\n    <image class=\"bg-image\" src=\"/static/login/beijing.jpg\" mode=\"aspectFill\" />\r\n    \r\n    <!-- 背景蒙版（增加可读性） -->\r\n    <view class=\"bg-overlay\"></view>\r\n\r\n    <!-- 内容层 -->\r\n    <view class=\"content-wrapper\">\r\n\r\n    <!-- Logo 和标题 -->\r\n    <view class=\"logo-section\">\r\n      <image class=\"logo\" src=\"/static/zhuye/yellow_love.png\" mode=\"aspectFit\" />\r\n      <text class=\"app-name\">甜蜜时光</text>\r\n      <text class=\"app-slogan\">记录每一个爱的瞬间</text>\r\n    </view>\r\n\r\n    <!-- 登录区域（无卡片） -->\r\n    <view class=\"login-area\">\r\n      <!-- 用户信息预览（授权后显示） -->\r\n      <view v-if=\"userInfo.nickName\" class=\"user-preview\">\r\n        <image class=\"avatar\" :src=\"userInfo.avatarUrl\" mode=\"aspectFill\" />\r\n        <text class=\"nickname\">{{ userInfo.nickName }}</text>\r\n      </view>\r\n\r\n      <!-- 登录按钮 -->\r\n      <button \r\n        v-if=\"!isLoggedIn\" \r\n        class=\"login-btn\" \r\n        @click=\"handleWxLogin\"\r\n        :loading=\"isLoading\"\r\n      >\r\n        <text class=\"btn-icon\">📱</text>\r\n        <text class=\"btn-text\">微信授权登录</text>\r\n      </button>\r\n\r\n      <!-- 头像获取按钮（新增） -->\r\n      <button\r\n        v-if=\"needAvatar\"\r\n        class=\"avatar-btn\"\r\n        open-type=\"chooseAvatar\"\r\n        @chooseavatar=\"onChooseAvatar\"\r\n      >\r\n        选择头像\r\n      </button>\r\n\r\n\r\n      <!-- 提示信息 -->\r\n      <view class=\"tips\">\r\n        <text class=\"tip-text\">登录即表示同意</text>\r\n        <text class=\"link-text\">《用户协议》</text>\r\n        <text class=\"tip-text\">和</text>\r\n        <text class=\"link-text\">《隐私政策》</text>\r\n      </view>\r\n    </view>\r\n    </view>\r\n\r\n    <!-- 用户资料确认弹窗 -->\r\n    <view v-if=\"showProfileModal\" class=\"modal-overlay\" @click=\"closeModal\">\r\n      <view class=\"modal-content\" @click.stop>\r\n        <!-- 关闭按钮 -->\r\n        <view class=\"modal-close\" @click=\"closeModal\">✕</view>\r\n\r\n        <!-- 标题 -->\r\n        <text class=\"modal-title\">确认您的资料</text>\r\n        <text class=\"modal-subtitle\">选择要在小程序中显示的头像和昵称</text>\r\n\r\n        <!-- 头像选择区域 -->\r\n        <view class=\"avatar-section\">\r\n          <text class=\"section-label\">头像选择</text>\r\n          \r\n          <!-- 微信头像选项 -->\r\n          <view class=\"option-item\" @click=\"selectWechatAvatar\">\r\n            <view class=\"option-avatar\">\r\n              <image :src=\"userInfo.avatarUrl\" mode=\"aspectFill\" />\r\n            </view>\r\n            <view class=\"option-info\">\r\n              <text class=\"option-title\">使用微信头像</text>\r\n              <text class=\"option-desc\">您的微信头像</text>\r\n            </view>\r\n            <view class=\"option-radio\" :class=\"{ active: profileData.avatarType === 'wechat' }\"></view>\r\n          </view>\r\n\r\n          <!-- 自定义头像选项 -->\r\n          <view class=\"option-item\" @click=\"uploadCustomAvatar\">\r\n            <view class=\"option-avatar placeholder\">\r\n              <text>+</text>\r\n            </view>\r\n            <view class=\"option-info\">\r\n              <text class=\"option-title\">上传自定义头像</text>\r\n              <text class=\"option-desc\">选择本地图片</text>\r\n            </view>\r\n            <view class=\"option-radio\" :class=\"{ active: profileData.avatarType === 'custom' }\"></view>\r\n          </view>\r\n        </view>\r\n\r\n        <!-- 昵称编辑区域 -->\r\n        <view class=\"nickname-section\">\r\n          <text class=\"section-label\">昵称设置</text>\r\n          \r\n          <!-- 使用微信昵称 -->\r\n          <view class=\"checkbox-item\" @click=\"toggleUseWechatNickname\">\r\n            <view class=\"checkbox\" :class=\"{ checked: profileData.useWechatNickname }\"></view>\r\n            <text class=\"checkbox-text\">使用微信昵称</text>\r\n            <text class=\"nickname-display\">{{ userInfo.nickName }}</text>\r\n          </view>\r\n\r\n          <!-- 自定义昵称 -->\r\n          <view class=\"custom-nickname-box\" v-if=\"!profileData.useWechatNickname\">\r\n            <text class=\"input-label\">自定义昵称</text>\r\n            <input \r\n              v-model=\"profileData.customNickname\" \r\n              type=\"text\" \r\n              maxlength=\"20\"\r\n              placeholder=\"请输入昵称（最多20个字）\"\r\n              class=\"nickname-input\"\r\n            />\r\n            <text class=\"char-count\">{{ profileData.customNickname.length }}/20</text>\r\n          </view>\r\n        </view>\r\n\r\n        <!-- 操作按钮 -->\r\n        <view class=\"modal-actions\">\r\n          <button class=\"btn-cancel\" @click=\"skipSetup\">暂时跳过</button>\r\n          <button class=\"btn-confirm\" @click=\"confirmProfile\">完成设置</button>\r\n        </view>\r\n      </view>\r\n    </view>\r\n  </view>\r\n</template>\r\n\r\n<script>\r\nimport { wxLogin } from '@/api/login.js';\r\nimport config from '@/utils/config.js';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      isLoggedIn: false,\r\n      isLoading: false,\r\n      showProfileModal: false,  // 控制丢丢丢是否显示\r\n      needAvatar: false,  // 新增：是否需要获取头像\r\n      userInfo: {\r\n        nickName: '',\r\n        avatarUrl: ''\r\n      },\r\n      profileData: {\r\n        avatarType: 'wechat',      // 'wechat' 或 'custom'\r\n        useWechatNickname: true,   // 是否使用微信昵称\r\n        customNickname: '',        // 自定义昵称\r\n        customAvatarUrl: ''        // 自定义头像 URL\r\n      }\r\n    };\r\n  },\r\n  onLoad() {\r\n    // 检查是否已登录\r\n    this.checkLoginStatus();\r\n  },\r\n  methods: {\r\n    // 检查登录状态\r\n    checkLoginStatus() {\r\n      try {\r\n        const loginInfo = uni.getStorageSync('login_info');\r\n        if (loginInfo && loginInfo.isLoggedIn) {\r\n          console.log('检测到已登录，自动跳转到首页');\r\n          this.isLoggedIn = true;\r\n          this.userInfo = loginInfo.userInfo || {};\r\n          // ✅ 立即跳转到首页，不显示登录页面\r\n          setTimeout(() => {\r\n            uni.reLaunch({\r\n              url: '/pages/index/index'\r\n            });\r\n          }, 300);\r\n        }\r\n      } catch (e) {\r\n        console.error('检查登录状态失败', e);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 微信授权登录主流程\r\n     * 流程说明：\r\n     * 1. 调用 uni.getUserProfile 获取用户信息（昵称、头像）- 必须由用户点击直接触发\r\n     * 2. 调用 wx.login 获取临时登录凭证 code\r\n     * 3. 将 code 和用户信息发送到后端服务器\r\n     * 4. 后端验证后返回 session_key 和 openid\r\n     * 5. 前端保存登录状态和用户信息\r\n     */\r\n    async handleWxLogin() {\r\n      this.isLoading = true;\r\n\r\n      try {\r\n        // 步骤1：获取用户信息（不包含头像）\r\n        const userProfile = await uni.getUserProfile({\r\n          desc: '用于完善用户资料'\r\n        });\r\n        \r\n        // 步骤2：显示头像选择按钮\r\n        this.needAvatar = true;\r\n        \r\n        // 步骤3：获取登录凭证code\r\n        const loginCode = await this.getWxLoginCode();\r\n        \r\n        // 保存基本用户信息\r\n        this.userInfo = {\r\n          nickName: userProfile.userInfo.nickName,\r\n          avatarUrl: '' // 头像URL将在用户选择后更新\r\n        };\r\n        \r\n        // 等待用户选择头像\r\n        uni.showToast({\r\n          title: '请选择您的头像',\r\n          icon: 'none',\r\n          duration: 2000\r\n        });\r\n        \r\n      } catch (e) {\r\n        console.error('登录失败', e);\r\n        uni.showToast({\r\n          title: e.errMsg || '登录失败，请重试',\r\n          icon: 'none'\r\n        });\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    // 新增：处理头像选择回调\r\n    async onChooseAvatar(e) {\r\n      try {\r\n        const { avatarUrl } = e.detail;\r\n        this.userInfo.avatarUrl = avatarUrl;\r\n        this.needAvatar = false;\r\n        \r\n        // 获取登录凭证code（如果还没有获取）\r\n        const loginCode = await this.getWxLoginCode();\r\n        \r\n        // 发送登录请求到后端\r\n        const loginResult = await this.sendLoginToBackend(loginCode, this.userInfo);\r\n        \r\n        // 保存登录信息\r\n        const loginInfo = {\r\n          isLoggedIn: true,\r\n          userInfo: this.userInfo,\r\n          token: loginResult.token || '',\r\n          openid: loginResult.openid || '',\r\n          sessionKey: loginResult.session_key || '',\r\n          loginTime: new Date().toISOString()\r\n        };\r\n        uni.setStorageSync('login_info', loginInfo);\r\n\r\n        this.isLoggedIn = true;\r\n\r\n        // 提示登录成功\r\n        uni.showToast({\r\n          title: '登录成功',\r\n          icon: 'success',\r\n          duration: 1500\r\n        });\r\n\r\n        // 显示资料确认弹窗\r\n        setTimeout(() => {\r\n          this.showProfileModal = true;\r\n        }, 1500);\r\n        \r\n      } catch (e) {\r\n        console.error('处理头像选择失败', e);\r\n        uni.showToast({\r\n          title: '头像设置失败，请重试',\r\n          icon: 'none'\r\n        });\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 调用微信 wx.login 接口获取临时登录凭证 code\r\n     * @returns {Promise<string>} 返回 code字符串\r\n     */\r\n    getWxLoginCode() {\r\n      return new Promise((resolve, reject) => {\r\n        // #ifdef MP-WEIXIN\r\n        uni.login({\r\n          provider: 'weixin',\r\n          success: (res) => {\r\n            if (res.code) {\r\n              resolve(res.code);\r\n            } else {\r\n              reject(new Error('获取code失败'));\r\n            }\r\n          },\r\n          fail: (err) => {\r\n            reject(err);\r\n          }\r\n        });\r\n        // #endif\r\n\r\n        // #ifndef MP-WEIXIN\r\n        // H5 或其他平台返回模拟 code\r\n        resolve('mock_code_' + Date.now());\r\n        // #endif\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 获取用户信息（微信小程序）\r\n     * @returns {Promise<Object>} 返回用户信息对象\r\n     */\r\n    getUserProfile() {\r\n      return new Promise((resolve, reject) => {\r\n        // #ifdef MP-WEIXIN\r\n        uni.getUserProfile({\r\n          desc: '用于完善用户资料',\r\n          success: (res) => {\r\n            resolve(res.userInfo);\r\n          },\r\n          fail: (err) => {\r\n            reject(err);\r\n          }\r\n        });\r\n        // #endif\r\n\r\n        // #ifndef MP-WEIXIN\r\n        // H5 或其他平台使用模拟数据\r\n        resolve({\r\n          nickName: '游客用户',\r\n          avatarUrl: '/static/zhuye/smile.png'\r\n        });\r\n        // #endif\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 将登录信息发送到后端服务器（使用封装好的API）\r\n     * @param {string} code - 微信登录凭证\r\n     * @param {Object} userInfo - 用户信息\r\n     * @returns {Promise<Object>} 返回后端响应数据\r\n     */\r\n    async sendLoginToBackend(code, userInfo) {\r\n      try {\r\n        // 调用封装好的登录API\r\n        const result = await wxLogin(code, userInfo);\r\n        return result;\r\n      } catch (error) {\r\n        // 直接抛出错误，不返回模拟数据\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    // 进入应用\r\n    enterApp() {\r\n      uni.reLaunch({\r\n        url: '/pages/index/index'\r\n      });\r\n    },\r\n\r\n    // ========== 资料确认相关方法 ==========\r\n\r\n    // 选择微信头像\r\n    selectWechatAvatar() {\r\n      this.profileData.avatarType = 'wechat';\r\n    },\r\n\r\n    // 上传自定义头像\r\n    uploadCustomAvatar() {\r\n      uni.chooseImage({\r\n        count: 1,\r\n        sizeType: ['compressed'],\r\n        sourceType: ['album', 'camera'],\r\n        success: (res) => {\r\n          const tempFilePath = res.tempFilePaths[0];\r\n          this.profileData.customAvatarUrl = tempFilePath;\r\n          this.profileData.avatarType = 'custom';\r\n        },\r\n        fail: (err) => {\r\n          console.error('选择图片失败', err);\r\n        }\r\n      });\r\n    },\r\n\r\n    // 切换是否使用微信昵称\r\n    toggleUseWechatNickname() {\r\n      this.profileData.useWechatNickname = !this.profileData.useWechatNickname;\r\n    },\r\n\r\n    // 抽屼设置\r\n    skipSetup() {\r\n      // 空会会也要保存第一获得的微信信息\r\n      this.showProfileModal = false;\r\n      this.enterApp();\r\n    },\r\n\r\n    // 完成设置\r\n    confirmProfile() {\r\n      // 验证自定义昵称\r\n      if (!this.profileData.useWechatNickname && !this.profileData.customNickname.trim()) {\r\n        uni.showToast({\r\n          title: '请输入昵称',\r\n          icon: 'none'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // 构建最终要保存的业个丢丢信息\r\n      const displayName = this.profileData.useWechatNickname \r\n        ? this.userInfo.nickName \r\n        : this.profileData.customNickname;\r\n\r\n      const displayAvatar = this.profileData.avatarType === 'wechat' \r\n        ? this.userInfo.avatarUrl \r\n        : this.profileData.customAvatarUrl;\r\n\r\n      // 更新本地存储的登录信息\r\n      const loginInfo = uni.getStorageSync('login_info') || {};\r\n      loginInfo.userInfo = {\r\n        ...loginInfo.userInfo,\r\n        displayName,        // 小程序中使用的昵称\r\n        displayAvatar,      // 小程序中使用的头像\r\n        originalNickName: this.userInfo.nickName,    // 原始微信昵称\r\n        originalAvatarUrl: this.userInfo.avatarUrl   // 原始微信头像\r\n      };\r\n      uni.setStorageSync('login_info', loginInfo);\r\n\r\n      // 关闭modal并跳转首页\r\n      this.showProfileModal = false;\r\n      this.enterApp();\r\n    },\r\n\r\n    // 关闭modal\r\n    closeModal() {\r\n      // 点击标顎体外仞fal关闭\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.login-page {\r\n  min-height: 100vh;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n/* 背景图片 */\r\n.bg-image {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 0;\r\n}\r\n\r\n/* 背景蒙版（让文字更清晰） */\r\n.bg-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(255, 255, 255, 0.15);\r\n  z-index: 1;\r\n}\r\n\r\n/* 内容层 */\r\n.content-wrapper {\r\n  position: relative;\r\n  z-index: 2;\r\n  min-height: 100vh;\r\n  padding: 40rpx;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/* 移除旧的背景装饰 */\r\n.bg-decoration {\r\n  display: none;\r\n}\r\n\r\n.heart {\r\n  display: none;\r\n}\r\n\r\n/* Logo 区域 */\r\n.logo-section {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 80rpx;\r\n}\r\n\r\n.logo {\r\n  width: 180rpx;\r\n  height: 180rpx;\r\n  margin-bottom: 30rpx;\r\n  animation: pulse 2s ease-in-out infinite;\r\n}\r\n\r\n@keyframes pulse {\r\n  0%, 100% {\r\n    transform: scale(1);\r\n  }\r\n  50% {\r\n    transform: scale(1.05);\r\n  }\r\n}\r\n\r\n.app-name {\r\n  font-size: 48rpx;\r\n  font-weight: 700;\r\n  color: #2bad81;\r\n  margin-bottom: 16rpx;\r\n}\r\n\r\n.app-slogan {\r\n  font-size: 26rpx;\r\n  color: #4e3c3c;\r\n}\r\n\r\n/* 登录区域（无卡片背景） */\r\n.login-area {\r\n  width: 70%;\r\n  max-width: 500rpx;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n/* 移除旧的登录卡片样式 */\r\n.login-card {\r\n  display: none;\r\n}\r\n\r\n/* 移除欢迎文字样式 */\r\n.welcome-text {\r\n  display: none;\r\n}\r\n\r\n.subtitle {\r\n  display: none;\r\n}\r\n\r\n/* 用户信息预览 */\r\n.user-preview {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.avatar {\r\n  width: 120rpx;\r\n  height: 120rpx;\r\n  border-radius: 60rpx;\r\n  border: 4rpx solid #e5e5e5;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.nickname {\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  font-weight: 600;\r\n}\r\n\r\n/* 登录按钮 */\r\n.login-btn, .enter-btn {\r\n  width: 100%;\r\n  background: #2bad81;\r\n  border-radius: 48rpx;\r\n  padding: 28rpx 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 12rpx;\r\n  box-shadow: 0 8rpx 20rpx rgba(43, 173, 129, 0.25);\r\n  margin-bottom: 30rpx;\r\n  border: none;\r\n  color: #ffffff;\r\n}\r\n\r\n.login-btn::after, .enter-btn::after {\r\n  border: none;\r\n}\r\n\r\n.login-btn:active, .enter-btn:active {\r\n  opacity: 0.85;\r\n}\r\n\r\n.enter-btn {\r\n  background: #2bad81;\r\n  box-shadow: 0 8rpx 20rpx rgba(43, 173, 129, 0.25);\r\n}\r\n\r\n.btn-icon {\r\n  font-size: 32rpx;\r\n}\r\n\r\n.btn-text {\r\n  font-size: 30rpx;\r\n  font-weight: 600;\r\n  color: #ffffff;\r\n}\r\n\r\n/* 提示信息 */\r\n.tips {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 8rpx;\r\n  padding: 16rpx 32rpx;\r\n  background: rgba(255, 255, 255, 0.85);\r\n  border-radius: 20rpx;\r\n  backdrop-filter: blur(8px);\r\n}\r\n\r\n.tip-text {\r\n  font-size: 22rpx;\r\n  color: #666;\r\n}\r\n\r\n.link-text {\r\n  font-size: 22rpx;\r\n  color: #2bad81;\r\n}\r\n\r\n/* 资料确认伹媗 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: flex-end;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  width: 100%;\r\n  background: #ffffff;\r\n  border-radius: 32rpx 32rpx 0 0;\r\n  padding: 40rpx 30rpx 60rpx 30rpx;\r\n  box-shadow: 0 -8rpx 24rpx rgba(0, 0, 0, 0.1);\r\n  position: relative;\r\n  max-height: 80vh;\r\n  overflow-y: auto;\r\n}\r\n\r\n.modal-close {\r\n  position: absolute;\r\n  top: 20rpx;\r\n  right: 20rpx;\r\n  font-size: 32rpx;\r\n  color: #999;\r\n  padding: 8rpx 16rpx;\r\n  border-radius: 50%;\r\n}\r\n\r\n.modal-title {\r\n  display: block;\r\n  font-size: 32rpx;\r\n  font-weight: 700;\r\n  color: #333;\r\n  margin-bottom: 12rpx;\r\n  text-align: center;\r\n}\r\n\r\n.modal-subtitle {\r\n  display: block;\r\n  font-size: 24rpx;\r\n  color: #999;\r\n  text-align: center;\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n/* 头像选择区 */\r\n.avatar-section {\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.section-label {\r\n  display: block;\r\n  font-size: 28rpx;\r\n  font-weight: 600;\r\n  color: #333;\r\n  margin-bottom: 20rpx;\r\n}\r\n\r\n.option-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20rpx;\r\n  background: #f8f8f8;\r\n  border-radius: 16rpx;\r\n  margin-bottom: 16rpx;\r\n  border: 2rpx solid transparent;\r\n}\r\n\r\n.option-item:active {\r\n  background: #f0f0f0;\r\n}\r\n\r\n.option-avatar {\r\n  width: 80rpx;\r\n  height: 80rpx;\r\n  border-radius: 16rpx;\r\n  overflow: hidden;\r\n  margin-right: 20rpx;\r\n  flex-shrink: 0;\r\n}\r\n\r\n.option-avatar image {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n.option-avatar.placeholder {\r\n  background: #e5e5e5;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 40rpx;\r\n  color: #999;\r\n}\r\n\r\n.option-info {\r\n  flex: 1;\r\n}\r\n\r\n.option-title {\r\n  display: block;\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  font-weight: 600;\r\n  margin-bottom: 8rpx;\r\n}\r\n\r\n.option-desc {\r\n  display: block;\r\n  font-size: 22rpx;\r\n  color: #999;\r\n}\r\n\r\n.option-radio {\r\n  width: 28rpx;\r\n  height: 28rpx;\r\n  border: 3rpx solid #d0d0d0;\r\n  border-radius: 50%;\r\n  margin-left: 20rpx;\r\n  flex-shrink: 0;\r\n  background: #fff;\r\n  position: relative;\r\n}\r\n\r\n.option-radio.active {\r\n  border-color: #2bad81;\r\n  background: #2bad81;\r\n}\r\n\r\n.option-radio.active::after {\r\n  content: '';\r\n  position: absolute;\r\n  width: 14rpx;\r\n  height: 24rpx;\r\n  border: solid #fff;\r\n  border-width: 0 3rpx 3rpx 0;\r\n  transform: rotate(45deg);\r\n  top: 50%;\r\n  left: 50%;\r\n  margin-top: -14rpx;\r\n  margin-left: -10rpx;\r\n}\r\n\r\n/* 昵称设置 */\r\n.nickname-section {\r\n  margin-bottom: 40rpx;\r\n}\r\n\r\n.checkbox-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 20rpx;\r\n  background: #f8f8f8;\r\n  border-radius: 16rpx;\r\n  margin-bottom: 16rpx;\r\n}\r\n\r\n.checkbox {\r\n  width: 28rpx;\r\n  height: 28rpx;\r\n  border: 2rpx solid #d0d0d0;\r\n  border-radius: 6rpx;\r\n  margin-right: 12rpx;\r\n  flex-shrink: 0;\r\n  position: relative;\r\n}\r\n\r\n.checkbox.checked {\r\n  background: #2bad81;\r\n  border-color: #2bad81;\r\n}\r\n\r\n.checkbox.checked::after {\r\n  content: '';\r\n  position: absolute;\r\n  width: 12rpx;\r\n  height: 20rpx;\r\n  border: solid #fff;\r\n  border-width: 0 2rpx 2rpx 0;\r\n  transform: rotate(45deg);\r\n  top: 50%;\r\n  left: 50%;\r\n  margin-top: -10rpx;\r\n  margin-left: -8rpx;\r\n}\r\n\r\n.checkbox-text {\r\n  flex: 1;\r\n  font-size: 28rpx;\r\n  color: #333;\r\n  font-weight: 500;\r\n}\r\n\r\n.nickname-display {\r\n  font-size: 24rpx;\r\n  color: #999;\r\n}\r\n\r\n.custom-nickname-box {\r\n  background: #f8f8f8;\r\n  border-radius: 16rpx;\r\n  padding: 20rpx;\r\n  margin-top: 16rpx;\r\n}\r\n\r\n.input-label {\r\n  display: block;\r\n  font-size: 24rpx;\r\n  color: #666;\r\n  margin-bottom: 12rpx;\r\n}\r\n\r\n.nickname-input {\r\n  width: 100%;\r\n  padding: 16rpx;\r\n  border: 1rpx solid #e5e5e5;\r\n  border-radius: 12rpx;\r\n  font-size: 26rpx;\r\n  background: #fff;\r\n  margin-bottom: 8rpx;\r\n}\r\n\r\n.char-count {\r\n  display: block;\r\n  font-size: 20rpx;\r\n  color: #999;\r\n  text-align: right;\r\n}\r\n\r\n/* 操作按钮 */\r\n.modal-actions {\r\n  display: flex;\r\n  gap: 16rpx;\r\n  margin-top: 40rpx;\r\n}\r\n\r\n.btn-cancel {\r\n  flex: 1;\r\n  padding: 16rpx;\r\n  background: #f0f0f0;\r\n  border-radius: 24rpx;\r\n  border: none;\r\n  font-size: 28rpx;\r\n  color: #666;\r\n  font-weight: 600;\r\n}\r\n\r\n.btn-cancel:active {\r\n  background: #e0e0e0;\r\n}\r\n\r\n.btn-confirm {\r\n  flex: 1;\r\n  padding: 16rpx;\r\n  background: #2bad81;\r\n  border-radius: 24rpx;\r\n  border: none;\r\n  font-size: 28rpx;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  box-shadow: 0 4rpx 12rpx rgba(43, 173, 129, 0.3);\r\n}\r\n\r\n.btn-confirm:active {\r\n  opacity: 0.9;\r\n}\r\n\r\n/* 底部 */\r\n.footer {\r\n  position: relative;\r\n  margin-top: 40rpx;\r\n  text-align: center;\r\n}\r\n\r\n.footer-text {\r\n  font-size: 24rpx;\r\n  color: #666;\r\n  text-shadow: 0 2rpx 4rpx rgba(255, 255, 255, 0.8);\r\n}\r\n\r\n/* 头像选择按钮样式 */\r\n.avatar-btn {\r\n  margin-top: 20rpx;\r\n  width: 80%;\r\n  height: 88rpx;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border-radius: 44rpx;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 32rpx;\r\n  color: #333;\r\n  border: 2rpx solid #e5e5e5;\r\n  \r\n  &::after {\r\n    border: none;\r\n  }\r\n  \r\n  &:active {\r\n    background: rgba(255, 255, 255, 0.7);\r\n  }\r\n}\r\n</style>\r\n","import MiniProgramPage from 'C:/Users/Administrator/Desktop/love_time/pages/login/index.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","e","wxLogin"],"mappings":"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"}